{
	"id": "f4366bda5211e0e77e5799d8654d0a12",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\";\n\n/**\n * Minimal Identity Registry (demo). Stores flags/attributes only (no PII).\n * Roles:\n *  - DEFAULT_ADMIN_ROLE\n *  - KYC_ADMIN_ROLE: can set KYC + attributes\n *  - SANCTIONS_ADMIN_ROLE: can set blacklist\n */\ncontract IdentityRegistry is AccessControl {\n    bytes32 public constant KYC_ADMIN_ROLE = keccak256(\"KYC_ADMIN_ROLE\");\n    bytes32 public constant SANCTIONS_ADMIN_ROLE = keccak256(\"SANCTIONS_ADMIN_ROLE\");\n\n    mapping(address => bool) public isVerified;          // KYC flag\n    mapping(address => bool) public isBlacklisted;       // sanctions flag\n    mapping(address => bytes2) public jurisdictionOf;    // e.g., \"HK\" = 0x484b, \"SG\" = 0x5347\n    mapping(address => uint8)  public investorTypeOf;    // 1=RETAIL, 2=PROFESSIONAL, 3=INSTITUTIONAL\n\n    event KycUpdated(address indexed user, bool ok);\n    event BlacklistUpdated(address indexed user, bool ok);\n    event AttributesUpdated(address indexed user, bytes2 juris, uint8 invType);\n\n    constructor(address admin) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(KYC_ADMIN_ROLE, admin);\n        _grantRole(SANCTIONS_ADMIN_ROLE, admin);\n    }\n\n    function setKyc(address user, bool ok) external onlyRole(KYC_ADMIN_ROLE) {\n        isVerified[user] = ok;\n        emit KycUpdated(user, ok);\n    }\n\n    function setBlacklist(address user, bool ok) external onlyRole(SANCTIONS_ADMIN_ROLE) {\n        isBlacklisted[user] = ok;\n        emit BlacklistUpdated(user, ok);\n    }\n\n    function setAttributes(address user, bytes2 juris, uint8 invType)\n        external onlyRole(KYC_ADMIN_ROLE)\n    {\n        jurisdictionOf[user] = juris;\n        investorTypeOf[user] = invType;\n        emit AttributesUpdated(user, juris, invType);\n    }\n}"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IdentityRegistry.sol": {
				"IdentityRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes2",
									"name": "juris",
									"type": "bytes2"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "invType",
									"type": "uint8"
								}
							],
							"name": "AttributesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ok",
									"type": "bool"
								}
							],
							"name": "BlacklistUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ok",
									"type": "bool"
								}
							],
							"name": "KycUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "KYC_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SANCTIONS_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "investorTypeOf",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "jurisdictionOf",
							"outputs": [
								{
									"internalType": "bytes2",
									"name": "",
									"type": "bytes2"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bytes2",
									"name": "juris",
									"type": "bytes2"
								},
								{
									"internalType": "uint8",
									"name": "invType",
									"type": "uint8"
								}
							],
							"name": "setAttributes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ok",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ok",
									"type": "bool"
								}
							],
							"name": "setKyc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/IdentityRegistry.sol\":393:1895  contract IdentityRegistry is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/IdentityRegistry.sol\":1138:1311  constructor(address admin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/IdentityRegistry.sol\":1175:1212  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_6\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/IdentityRegistry.sol\":1186:1204  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/IdentityRegistry.sol\":1206:1211  admin */\n  dup3\n    /* \"contracts/IdentityRegistry.sol\":1175:1185  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/IdentityRegistry.sol\":1175:1212  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/IdentityRegistry.sol\":1222:1255  _grantRole(KYC_ADMIN_ROLE, admin) */\n  tag_8\n    /* \"contracts/IdentityRegistry.sol\":483:510  keccak256(\"KYC_ADMIN_ROLE\") */\n  0x811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea\n    /* \"contracts/IdentityRegistry.sol\":1249:1254  admin */\n  dup3\n    /* \"contracts/IdentityRegistry.sol\":1222:1232  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/IdentityRegistry.sol\":1222:1255  _grantRole(KYC_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/IdentityRegistry.sol\":1265:1304  _grantRole(SANCTIONS_ADMIN_ROLE, admin) */\n  tag_9\n    /* \"contracts/IdentityRegistry.sol\":563:596  keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n  0x120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72\n    /* \"contracts/IdentityRegistry.sol\":1298:1303  admin */\n  dup3\n    /* \"contracts/IdentityRegistry.sol\":1265:1275  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/IdentityRegistry.sol\":1265:1304  _grantRole(SANCTIONS_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/IdentityRegistry.sol\":1138:1311  constructor(address admin) {... */\n  pop\n    /* \"contracts/IdentityRegistry.sol\":393:1895  contract IdentityRegistry is AccessControl {... */\n  jump(tag_10)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_12\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_13)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_15\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_16)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_11)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_11:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_13:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_16:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_35\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_36:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_38\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":932:1051   */\ntag_40:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_42\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/IdentityRegistry.sol\":393:1895  contract IdentityRegistry is AccessControl {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/IdentityRegistry.sol\":393:1895  contract IdentityRegistry is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c0cfbb0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb9209e33\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb9209e33\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdce9571f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8c0cfbb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x94792e8d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x248a9ca3\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7807aeba\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02d7fd92\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x05bd4970\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":442:510  bytes32 public constant KYC_ADMIN_ROLE = keccak256(\"KYC_ADMIN_ROLE\") */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":842:890  mapping(address => uint8)  public investorTypeOf */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":1469:1636  function setBlacklist(address user, bool ok) external onlyRole(SANCTIONS_ADMIN_ROLE) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/IdentityRegistry.sol\":1317:1463  function setKyc(address user, bool ok) external onlyRole(KYC_ADMIN_ROLE) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/IdentityRegistry.sol\":516:596  bytes32 public constant SANCTIONS_ADMIN_ROLE = keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":1642:1893  function setAttributes(address user, bytes2 juris, uint8 invType)... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":603:645  mapping(address => bool) public isVerified */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/IdentityRegistry.sol\":747:795  mapping(address => bytes2) public jurisdictionOf */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/IdentityRegistry.sol\":672:717  mapping(address => bool) public isBlacklisted */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_89\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_90\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_89:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_88:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":442:510  bytes32 public constant KYC_ADMIN_ROLE = keccak256(\"KYC_ADMIN_ROLE\") */\n    tag_29:\n        /* \"contracts/IdentityRegistry.sol\":483:510  keccak256(\"KYC_ADMIN_ROLE\") */\n      0x811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea\n        /* \"contracts/IdentityRegistry.sol\":442:510  bytes32 public constant KYC_ADMIN_ROLE = keccak256(\"KYC_ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":842:890  mapping(address => uint8)  public investorTypeOf */\n    tag_35:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":1469:1636  function setBlacklist(address user, bool ok) external onlyRole(SANCTIONS_ADMIN_ROLE) {... */\n    tag_41:\n        /* \"contracts/IdentityRegistry.sol\":563:596  keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n      0x120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_92\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_93\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/IdentityRegistry.sol\":1586:1588  ok */\n      dup2\n        /* \"contracts/IdentityRegistry.sol\":1564:1577  isBlacklisted */\n      0x02\n        /* \"contracts/IdentityRegistry.sol\":1564:1583  isBlacklisted[user] */\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1578:1582  user */\n      dup6\n        /* \"contracts/IdentityRegistry.sol\":1564:1583  isBlacklisted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1564:1588  isBlacklisted[user] = ok */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IdentityRegistry.sol\":1620:1624  user */\n      dup3\n        /* \"contracts/IdentityRegistry.sol\":1603:1629  BlacklistUpdated(user, ok) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n        /* \"contracts/IdentityRegistry.sol\":1626:1628  ok */\n      dup4\n        /* \"contracts/IdentityRegistry.sol\":1603:1629  BlacklistUpdated(user, ok) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/IdentityRegistry.sol\":1469:1636  function setBlacklist(address user, bool ok) external onlyRole(SANCTIONS_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_45:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_50:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_97\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_45\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_97:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_99\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_93\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_99:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_101\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_102\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_53:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_104\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_105\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_106\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_106:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_107\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_108\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":1317:1463  function setKyc(address user, bool ok) external onlyRole(KYC_ADMIN_ROLE) {... */\n    tag_56:\n        /* \"contracts/IdentityRegistry.sol\":483:510  keccak256(\"KYC_ADMIN_ROLE\") */\n      0x811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_110\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_93\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/IdentityRegistry.sol\":1419:1421  ok */\n      dup2\n        /* \"contracts/IdentityRegistry.sol\":1400:1410  isVerified */\n      0x01\n        /* \"contracts/IdentityRegistry.sol\":1400:1416  isVerified[user] */\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1411:1415  user */\n      dup6\n        /* \"contracts/IdentityRegistry.sol\":1400:1416  isVerified[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1400:1421  isVerified[user] = ok */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IdentityRegistry.sol\":1447:1451  user */\n      dup3\n        /* \"contracts/IdentityRegistry.sol\":1436:1456  KycUpdated(user, ok) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc060d8add9e7b6a84ecb7f29b08e239fad2c56c4f609dec6c17ab68d8655fe7d\n        /* \"contracts/IdentityRegistry.sol\":1453:1455  ok */\n      dup4\n        /* \"contracts/IdentityRegistry.sol\":1436:1456  KycUpdated(user, ok) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/IdentityRegistry.sol\":1317:1463  function setKyc(address user, bool ok) external onlyRole(KYC_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":516:596  bytes32 public constant SANCTIONS_ADMIN_ROLE = keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n    tag_58:\n        /* \"contracts/IdentityRegistry.sol\":563:596  keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n      0x120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72\n        /* \"contracts/IdentityRegistry.sol\":516:596  bytes32 public constant SANCTIONS_ADMIN_ROLE = keccak256(\"SANCTIONS_ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_62:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":1642:1893  function setAttributes(address user, bytes2 juris, uint8 invType)... */\n    tag_67:\n        /* \"contracts/IdentityRegistry.sol\":483:510  keccak256(\"KYC_ADMIN_ROLE\") */\n      0x811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_115\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_93\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/IdentityRegistry.sol\":1787:1792  juris */\n      dup3\n        /* \"contracts/IdentityRegistry.sol\":1764:1778  jurisdictionOf */\n      0x03\n        /* \"contracts/IdentityRegistry.sol\":1764:1784  jurisdictionOf[user] */\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1779:1783  user */\n      dup7\n        /* \"contracts/IdentityRegistry.sol\":1764:1784  jurisdictionOf[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1764:1792  jurisdictionOf[user] = juris */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xf0\n      shr\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IdentityRegistry.sol\":1825:1832  invType */\n      dup2\n        /* \"contracts/IdentityRegistry.sol\":1802:1816  investorTypeOf */\n      0x04\n        /* \"contracts/IdentityRegistry.sol\":1802:1822  investorTypeOf[user] */\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1817:1821  user */\n      dup7\n        /* \"contracts/IdentityRegistry.sol\":1802:1822  investorTypeOf[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/IdentityRegistry.sol\":1802:1832  investorTypeOf[user] = invType */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IdentityRegistry.sol\":1865:1869  user */\n      dup4\n        /* \"contracts/IdentityRegistry.sol\":1847:1886  AttributesUpdated(user, juris, invType) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa09be255173b26f6e7520d96ef6279415258e6eea9b9295a29a448c4f81dab74\n        /* \"contracts/IdentityRegistry.sol\":1871:1876  juris */\n      dup5\n        /* \"contracts/IdentityRegistry.sol\":1878:1885  invType */\n      dup5\n        /* \"contracts/IdentityRegistry.sol\":1847:1886  AttributesUpdated(user, juris, invType) */\n      mload(0x40)\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/IdentityRegistry.sol\":1642:1893  function setAttributes(address user, bytes2 juris, uint8 invType)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_69:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":603:645  mapping(address => bool) public isVerified */\n    tag_73:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_77:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_119\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_45\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_119:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_121\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_93\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_121:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_123\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_108\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":747:795  mapping(address => bytes2) public jurisdictionOf */\n    tag_80:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xf0\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/IdentityRegistry.sol\":672:717  mapping(address => bool) public isBlacklisted */\n    tag_85:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_90:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_93:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_126\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_127\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_105\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_128\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_126:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_102:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_130\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_62\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_130:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_131\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_132\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_105\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_129)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_131:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_129:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_108:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_136\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_62\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_136:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_138\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_105\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_135)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_137:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_135:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_128:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_141\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_62\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_141:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_142\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_142:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_146:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_148:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_149:\n        /* \"#utility.yul\":561:584   */\n      tag_178\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_148\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_179:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_150:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_181\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_149\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_184\n      tag_146\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":833:952   */\n    tag_183:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_185\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_150\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_151:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_152:\n        /* \"#utility.yul\":1268:1289   */\n      tag_188\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_151\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_190\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_152\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_153:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_154:\n        /* \"#utility.yul\":1688:1712   */\n      tag_193\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_153\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_31:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_195\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_154\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2079   */\n    tag_155:\n        /* \"#utility.yul\":1990:1997   */\n      0x00\n        /* \"#utility.yul\":2030:2072   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2073   */\n      and\n        /* \"#utility.yul\":2008:2073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2181   */\n    tag_156:\n        /* \"#utility.yul\":2122:2129   */\n      0x00\n        /* \"#utility.yul\":2151:2175   */\n      tag_198\n        /* \"#utility.yul\":2169:2174   */\n      dup3\n        /* \"#utility.yul\":2151:2175   */\n      tag_155\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2140:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2085:2181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2309   */\n    tag_157:\n        /* \"#utility.yul\":2260:2284   */\n      tag_200\n        /* \"#utility.yul\":2278:2283   */\n      dup2\n        /* \"#utility.yul\":2260:2284   */\n      tag_156\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2250:2285   */\n      eq\n        /* \"#utility.yul\":2240:2303   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2299:2300   */\n      0x00\n        /* \"#utility.yul\":2296:2297   */\n      0x00\n        /* \"#utility.yul\":2289:2301   */\n      revert\n        /* \"#utility.yul\":2240:2303   */\n    tag_201:\n        /* \"#utility.yul\":2187:2309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2454   */\n    tag_158:\n        /* \"#utility.yul\":2361:2366   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup2\n        /* \"#utility.yul\":2386:2406   */\n      calldataload\n        /* \"#utility.yul\":2377:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2415:2448   */\n      tag_203\n        /* \"#utility.yul\":2442:2447   */\n      dup2\n        /* \"#utility.yul\":2415:2448   */\n      tag_157\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2315:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2789   */\n    tag_34:\n        /* \"#utility.yul\":2519:2525   */\n      0x00\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup3\n        /* \"#utility.yul\":2547:2554   */\n      dup5\n        /* \"#utility.yul\":2543:2566   */\n      sub\n        /* \"#utility.yul\":2539:2571   */\n      slt\n        /* \"#utility.yul\":2536:2655   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2574:2653   */\n      tag_206\n      tag_146\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2536:2655   */\n    tag_205:\n        /* \"#utility.yul\":2694:2695   */\n      0x00\n        /* \"#utility.yul\":2719:2772   */\n      tag_207\n        /* \"#utility.yul\":2764:2771   */\n      dup5\n        /* \"#utility.yul\":2755:2761   */\n      dup3\n        /* \"#utility.yul\":2744:2753   */\n      dup6\n        /* \"#utility.yul\":2740:2762   */\n      add\n        /* \"#utility.yul\":2719:2772   */\n      tag_158\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2709:2772   */\n      swap2\n      pop\n        /* \"#utility.yul\":2665:2782   */\n      pop\n        /* \"#utility.yul\":2460:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2881   */\n    tag_159:\n        /* \"#utility.yul\":2830:2837   */\n      0x00\n        /* \"#utility.yul\":2870:2874   */\n      0xff\n        /* \"#utility.yul\":2863:2868   */\n      dup3\n        /* \"#utility.yul\":2859:2875   */\n      and\n        /* \"#utility.yul\":2848:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2887:2999   */\n    tag_160:\n        /* \"#utility.yul\":2970:2992   */\n      tag_210\n        /* \"#utility.yul\":2986:2991   */\n      dup2\n        /* \"#utility.yul\":2970:2992   */\n      tag_159\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2965:2968   */\n      dup3\n        /* \"#utility.yul\":2958:2993   */\n      mstore\n        /* \"#utility.yul\":2887:2999   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3005:3219   */\n    tag_37:\n        /* \"#utility.yul\":3094:3098   */\n      0x00\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"#utility.yul\":3121:3130   */\n      dup3\n        /* \"#utility.yul\":3117:3135   */\n      add\n        /* \"#utility.yul\":3109:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3145:3212   */\n      tag_212\n        /* \"#utility.yul\":3209:3210   */\n      0x00\n        /* \"#utility.yul\":3198:3207   */\n      dup4\n        /* \"#utility.yul\":3194:3211   */\n      add\n        /* \"#utility.yul\":3185:3191   */\n      dup5\n        /* \"#utility.yul\":3145:3212   */\n      tag_160\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3005:3219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3225:3341   */\n    tag_161:\n        /* \"#utility.yul\":3295:3316   */\n      tag_214\n        /* \"#utility.yul\":3310:3315   */\n      dup2\n        /* \"#utility.yul\":3295:3316   */\n      tag_151\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3288:3293   */\n      dup2\n        /* \"#utility.yul\":3285:3317   */\n      eq\n        /* \"#utility.yul\":3275:3335   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":3331:3332   */\n      0x00\n        /* \"#utility.yul\":3328:3329   */\n      0x00\n        /* \"#utility.yul\":3321:3333   */\n      revert\n        /* \"#utility.yul\":3275:3335   */\n    tag_215:\n        /* \"#utility.yul\":3225:3341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3347:3480   */\n    tag_162:\n        /* \"#utility.yul\":3390:3395   */\n      0x00\n        /* \"#utility.yul\":3428:3434   */\n      dup2\n        /* \"#utility.yul\":3415:3435   */\n      calldataload\n        /* \"#utility.yul\":3406:3435   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3474   */\n      tag_217\n        /* \"#utility.yul\":3468:3473   */\n      dup2\n        /* \"#utility.yul\":3444:3474   */\n      tag_161\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3347:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3954   */\n    tag_40:\n        /* \"#utility.yul\":3551:3557   */\n      0x00\n        /* \"#utility.yul\":3559:3565   */\n      0x00\n        /* \"#utility.yul\":3608:3610   */\n      0x40\n        /* \"#utility.yul\":3596:3605   */\n      dup4\n        /* \"#utility.yul\":3587:3594   */\n      dup6\n        /* \"#utility.yul\":3583:3606   */\n      sub\n        /* \"#utility.yul\":3579:3611   */\n      slt\n        /* \"#utility.yul\":3576:3695   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3614:3693   */\n      tag_220\n      tag_146\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3576:3695   */\n    tag_219:\n        /* \"#utility.yul\":3734:3735   */\n      0x00\n        /* \"#utility.yul\":3759:3812   */\n      tag_221\n        /* \"#utility.yul\":3804:3811   */\n      dup6\n        /* \"#utility.yul\":3795:3801   */\n      dup3\n        /* \"#utility.yul\":3784:3793   */\n      dup7\n        /* \"#utility.yul\":3780:3802   */\n      add\n        /* \"#utility.yul\":3759:3812   */\n      tag_158\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3749:3812   */\n      swap3\n      pop\n        /* \"#utility.yul\":3705:3822   */\n      pop\n        /* \"#utility.yul\":3861:3863   */\n      0x20\n        /* \"#utility.yul\":3887:3937   */\n      tag_222\n        /* \"#utility.yul\":3929:3936   */\n      dup6\n        /* \"#utility.yul\":3920:3926   */\n      dup3\n        /* \"#utility.yul\":3909:3918   */\n      dup7\n        /* \"#utility.yul\":3905:3927   */\n      add\n        /* \"#utility.yul\":3887:3937   */\n      tag_162\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3877:3937   */\n      swap2\n      pop\n        /* \"#utility.yul\":3832:3947   */\n      pop\n        /* \"#utility.yul\":3486:3954   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3960:4082   */\n    tag_163:\n        /* \"#utility.yul\":4033:4057   */\n      tag_224\n        /* \"#utility.yul\":4051:4056   */\n      dup2\n        /* \"#utility.yul\":4033:4057   */\n      tag_153\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4026:4031   */\n      dup2\n        /* \"#utility.yul\":4023:4058   */\n      eq\n        /* \"#utility.yul\":4013:4076   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":4072:4073   */\n      0x00\n        /* \"#utility.yul\":4069:4070   */\n      0x00\n        /* \"#utility.yul\":4062:4074   */\n      revert\n        /* \"#utility.yul\":4013:4076   */\n    tag_225:\n        /* \"#utility.yul\":3960:4082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4088:4227   */\n    tag_164:\n        /* \"#utility.yul\":4134:4139   */\n      0x00\n        /* \"#utility.yul\":4172:4178   */\n      dup2\n        /* \"#utility.yul\":4159:4179   */\n      calldataload\n        /* \"#utility.yul\":4150:4179   */\n      swap1\n      pop\n        /* \"#utility.yul\":4188:4221   */\n      tag_227\n        /* \"#utility.yul\":4215:4220   */\n      dup2\n        /* \"#utility.yul\":4188:4221   */\n      tag_163\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4088:4227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4233:4562   */\n    tag_44:\n        /* \"#utility.yul\":4292:4298   */\n      0x00\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4329:4338   */\n      dup3\n        /* \"#utility.yul\":4320:4327   */\n      dup5\n        /* \"#utility.yul\":4316:4339   */\n      sub\n        /* \"#utility.yul\":4312:4344   */\n      slt\n        /* \"#utility.yul\":4309:4428   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":4347:4426   */\n      tag_230\n      tag_146\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4309:4428   */\n    tag_229:\n        /* \"#utility.yul\":4467:4468   */\n      0x00\n        /* \"#utility.yul\":4492:4545   */\n      tag_231\n        /* \"#utility.yul\":4537:4544   */\n      dup5\n        /* \"#utility.yul\":4528:4534   */\n      dup3\n        /* \"#utility.yul\":4517:4526   */\n      dup6\n        /* \"#utility.yul\":4513:4535   */\n      add\n        /* \"#utility.yul\":4492:4545   */\n      tag_164\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4482:4545   */\n      swap2\n      pop\n        /* \"#utility.yul\":4438:4555   */\n      pop\n        /* \"#utility.yul\":4233:4562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4568:5042   */\n    tag_49:\n        /* \"#utility.yul\":4636:4642   */\n      0x00\n        /* \"#utility.yul\":4644:4650   */\n      0x00\n        /* \"#utility.yul\":4693:4695   */\n      0x40\n        /* \"#utility.yul\":4681:4690   */\n      dup4\n        /* \"#utility.yul\":4672:4679   */\n      dup6\n        /* \"#utility.yul\":4668:4691   */\n      sub\n        /* \"#utility.yul\":4664:4696   */\n      slt\n        /* \"#utility.yul\":4661:4780   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4699:4778   */\n      tag_234\n      tag_146\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4661:4780   */\n    tag_233:\n        /* \"#utility.yul\":4819:4820   */\n      0x00\n        /* \"#utility.yul\":4844:4897   */\n      tag_235\n        /* \"#utility.yul\":4889:4896   */\n      dup6\n        /* \"#utility.yul\":4880:4886   */\n      dup3\n        /* \"#utility.yul\":4869:4878   */\n      dup7\n        /* \"#utility.yul\":4865:4887   */\n      add\n        /* \"#utility.yul\":4844:4897   */\n      tag_164\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4834:4897   */\n      swap3\n      pop\n        /* \"#utility.yul\":4790:4907   */\n      pop\n        /* \"#utility.yul\":4946:4948   */\n      0x20\n        /* \"#utility.yul\":4972:5025   */\n      tag_236\n        /* \"#utility.yul\":5017:5024   */\n      dup6\n        /* \"#utility.yul\":5008:5014   */\n      dup3\n        /* \"#utility.yul\":4997:5006   */\n      dup7\n        /* \"#utility.yul\":4993:5015   */\n      add\n        /* \"#utility.yul\":4972:5025   */\n      tag_158\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4962:5025   */\n      swap2\n      pop\n        /* \"#utility.yul\":4917:5035   */\n      pop\n        /* \"#utility.yul\":4568:5042   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5048:5197   */\n    tag_165:\n        /* \"#utility.yul\":5084:5091   */\n      0x00\n        /* \"#utility.yul\":5124:5190   */\n      0xffff000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5117:5122   */\n      dup3\n        /* \"#utility.yul\":5113:5191   */\n      and\n        /* \"#utility.yul\":5102:5191   */\n      swap1\n      pop\n        /* \"#utility.yul\":5048:5197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5203:5323   */\n    tag_166:\n        /* \"#utility.yul\":5275:5298   */\n      tag_239\n        /* \"#utility.yul\":5292:5297   */\n      dup2\n        /* \"#utility.yul\":5275:5298   */\n      tag_165\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5268:5273   */\n      dup2\n        /* \"#utility.yul\":5265:5299   */\n      eq\n        /* \"#utility.yul\":5255:5317   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      0x00\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5255:5317   */\n    tag_240:\n        /* \"#utility.yul\":5203:5323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5329:5466   */\n    tag_167:\n        /* \"#utility.yul\":5374:5379   */\n      0x00\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5399:5419   */\n      calldataload\n        /* \"#utility.yul\":5390:5419   */\n      swap1\n      pop\n        /* \"#utility.yul\":5428:5460   */\n      tag_242\n        /* \"#utility.yul\":5454:5459   */\n      dup2\n        /* \"#utility.yul\":5428:5460   */\n      tag_166\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5329:5466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5472:5590   */\n    tag_168:\n        /* \"#utility.yul\":5543:5565   */\n      tag_244\n        /* \"#utility.yul\":5559:5564   */\n      dup2\n        /* \"#utility.yul\":5543:5565   */\n      tag_159\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5536:5541   */\n      dup2\n        /* \"#utility.yul\":5533:5566   */\n      eq\n        /* \"#utility.yul\":5523:5584   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":5580:5581   */\n      0x00\n        /* \"#utility.yul\":5577:5578   */\n      0x00\n        /* \"#utility.yul\":5570:5582   */\n      revert\n        /* \"#utility.yul\":5523:5584   */\n    tag_245:\n        /* \"#utility.yul\":5472:5590   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5731   */\n    tag_169:\n        /* \"#utility.yul\":5640:5645   */\n      0x00\n        /* \"#utility.yul\":5678:5684   */\n      dup2\n        /* \"#utility.yul\":5665:5685   */\n      calldataload\n        /* \"#utility.yul\":5656:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5694:5725   */\n      tag_247\n        /* \"#utility.yul\":5719:5724   */\n      dup2\n        /* \"#utility.yul\":5694:5725   */\n      tag_168\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5596:5731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:6350   */\n    tag_66:\n        /* \"#utility.yul\":5811:5817   */\n      0x00\n        /* \"#utility.yul\":5819:5825   */\n      0x00\n        /* \"#utility.yul\":5827:5833   */\n      0x00\n        /* \"#utility.yul\":5876:5878   */\n      0x60\n        /* \"#utility.yul\":5864:5873   */\n      dup5\n        /* \"#utility.yul\":5855:5862   */\n      dup7\n        /* \"#utility.yul\":5851:5874   */\n      sub\n        /* \"#utility.yul\":5847:5879   */\n      slt\n        /* \"#utility.yul\":5844:5963   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":5882:5961   */\n      tag_250\n      tag_146\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5844:5963   */\n    tag_249:\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":6027:6080   */\n      tag_251\n        /* \"#utility.yul\":6072:6079   */\n      dup7\n        /* \"#utility.yul\":6063:6069   */\n      dup3\n        /* \"#utility.yul\":6052:6061   */\n      dup8\n        /* \"#utility.yul\":6048:6070   */\n      add\n        /* \"#utility.yul\":6027:6080   */\n      tag_158\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6017:6080   */\n      swap4\n      pop\n        /* \"#utility.yul\":5973:6090   */\n      pop\n        /* \"#utility.yul\":6129:6131   */\n      0x20\n        /* \"#utility.yul\":6155:6207   */\n      tag_252\n        /* \"#utility.yul\":6199:6206   */\n      dup7\n        /* \"#utility.yul\":6190:6196   */\n      dup3\n        /* \"#utility.yul\":6179:6188   */\n      dup8\n        /* \"#utility.yul\":6175:6197   */\n      add\n        /* \"#utility.yul\":6155:6207   */\n      tag_167\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6145:6207   */\n      swap3\n      pop\n        /* \"#utility.yul\":6100:6217   */\n      pop\n        /* \"#utility.yul\":6256:6258   */\n      0x40\n        /* \"#utility.yul\":6282:6333   */\n      tag_253\n        /* \"#utility.yul\":6325:6332   */\n      dup7\n        /* \"#utility.yul\":6316:6322   */\n      dup3\n        /* \"#utility.yul\":6305:6314   */\n      dup8\n        /* \"#utility.yul\":6301:6323   */\n      add\n        /* \"#utility.yul\":6282:6333   */\n      tag_169\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6272:6333   */\n      swap2\n      pop\n        /* \"#utility.yul\":6227:6343   */\n      pop\n        /* \"#utility.yul\":5737:6350   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6356:6471   */\n    tag_170:\n        /* \"#utility.yul\":6441:6464   */\n      tag_255\n        /* \"#utility.yul\":6458:6463   */\n      dup2\n        /* \"#utility.yul\":6441:6464   */\n      tag_165\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6465   */\n      mstore\n        /* \"#utility.yul\":6356:6471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6477:6695   */\n    tag_82:\n        /* \"#utility.yul\":6568:6572   */\n      0x00\n        /* \"#utility.yul\":6606:6608   */\n      0x20\n        /* \"#utility.yul\":6595:6604   */\n      dup3\n        /* \"#utility.yul\":6591:6609   */\n      add\n        /* \"#utility.yul\":6583:6609   */\n      swap1\n      pop\n        /* \"#utility.yul\":6619:6688   */\n      tag_257\n        /* \"#utility.yul\":6685:6686   */\n      0x00\n        /* \"#utility.yul\":6674:6683   */\n      dup4\n        /* \"#utility.yul\":6670:6687   */\n      add\n        /* \"#utility.yul\":6661:6667   */\n      dup5\n        /* \"#utility.yul\":6619:6688   */\n      tag_170\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6477:6695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6701:7021   */\n    tag_118:\n        /* \"#utility.yul\":6816:6820   */\n      0x00\n        /* \"#utility.yul\":6854:6856   */\n      0x40\n        /* \"#utility.yul\":6843:6852   */\n      dup3\n        /* \"#utility.yul\":6839:6857   */\n      add\n        /* \"#utility.yul\":6831:6857   */\n      swap1\n      pop\n        /* \"#utility.yul\":6867:6936   */\n      tag_259\n        /* \"#utility.yul\":6933:6934   */\n      0x00\n        /* \"#utility.yul\":6922:6931   */\n      dup4\n        /* \"#utility.yul\":6918:6935   */\n      add\n        /* \"#utility.yul\":6909:6915   */\n      dup6\n        /* \"#utility.yul\":6867:6936   */\n      tag_170\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6946:7014   */\n      tag_260\n        /* \"#utility.yul\":7010:7012   */\n      0x20\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7013   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7014   */\n      tag_160\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6701:7021   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7027:7145   */\n    tag_171:\n        /* \"#utility.yul\":7114:7138   */\n      tag_262\n        /* \"#utility.yul\":7132:7137   */\n      dup2\n        /* \"#utility.yul\":7114:7138   */\n      tag_156\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7109:7112   */\n      dup3\n        /* \"#utility.yul\":7102:7139   */\n      mstore\n        /* \"#utility.yul\":7027:7145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7151:7483   */\n    tag_144:\n        /* \"#utility.yul\":7272:7276   */\n      0x00\n        /* \"#utility.yul\":7310:7312   */\n      0x40\n        /* \"#utility.yul\":7299:7308   */\n      dup3\n        /* \"#utility.yul\":7295:7313   */\n      add\n        /* \"#utility.yul\":7287:7313   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7394   */\n      tag_264\n        /* \"#utility.yul\":7391:7392   */\n      0x00\n        /* \"#utility.yul\":7380:7389   */\n      dup4\n        /* \"#utility.yul\":7376:7393   */\n      add\n        /* \"#utility.yul\":7367:7373   */\n      dup6\n        /* \"#utility.yul\":7323:7394   */\n      tag_171\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7404:7476   */\n      tag_265\n        /* \"#utility.yul\":7472:7474   */\n      0x20\n        /* \"#utility.yul\":7461:7470   */\n      dup4\n        /* \"#utility.yul\":7457:7475   */\n      add\n        /* \"#utility.yul\":7448:7454   */\n      dup5\n        /* \"#utility.yul\":7404:7476   */\n      tag_154\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7151:7483   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab0aac065d5b7e6e3b24a5c0bc3d9acad517c4a393335835a3f1a023dc23a1fd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_405": {
									"entryPoint": 172,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_539": {
									"entryPoint": 516,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_229": {
									"entryPoint": 417,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:6",
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161120838038061120883398181016040528101906100319190610269565b6100435f5f1b826100ac60201b60201c565b506100747f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea826100ac60201b60201c565b506100a57f120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72826100ac60201b60201c565b5050610294565b5f6100bd83836101a160201b60201c565b6101975760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061013461020460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061019b565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102388261020f565b9050919050565b6102488161022e565b8114610252575f5ffd5b50565b5f815190506102638161023f565b92915050565b5f6020828403121561027e5761027d61020b565b5b5f61028b84828501610255565b91505092915050565b610f67806102a15f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c80638c0cfbb011610095578063b9209e3311610064578063b9209e33146102a8578063d547741f146102d8578063dce9571f146102f4578063fe575a8714610324576100fe565b80638c0cfbb01461022057806391d148541461023e57806394792e8d1461026e578063a217fddf1461028a576100fe565b8063248a9ca3116100d1578063248a9ca31461019c5780632f2ff15d146101cc57806336568abe146101e85780637807aeba14610204576100fe565b806301ffc9a71461010257806302d7fd921461013257806305bd497014610150578063153b0d1e14610180575b5f5ffd5b61011c60048036038101906101179190610b9a565b610354565b6040516101299190610bdf565b60405180910390f35b61013a6103cd565b6040516101479190610c10565b60405180910390f35b61016a60048036038101906101659190610c83565b6103f1565b6040516101779190610cc9565b60405180910390f35b61019a60048036038101906101959190610d0c565b61040e565b005b6101b660048036038101906101b19190610d74565b6104df565b6040516101c39190610c10565b60405180910390f35b6101e660048036038101906101e19190610d9f565b6104fb565b005b61020260048036038101906101fd9190610d9f565b61051d565b005b61021e60048036038101906102199190610d0c565b610598565b005b610228610669565b6040516102359190610c10565b60405180910390f35b61025860048036038101906102539190610d9f565b61068d565b6040516102659190610bdf565b60405180910390f35b61028860048036038101906102839190610e5c565b6106f0565b005b61029261081b565b60405161029f9190610c10565b60405180910390f35b6102c260048036038101906102bd9190610c83565b610821565b6040516102cf9190610bdf565b60405180910390f35b6102f260048036038101906102ed9190610d9f565b61083e565b005b61030e60048036038101906103099190610c83565b610860565b60405161031b9190610ebb565b60405180910390f35b61033e60048036038101906103399190610c83565b61087d565b60405161034b9190610bdf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c657506103c58261089a565b5b9050919050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea81565b6004602052805f5260405f205f915054906101000a900460ff1681565b7f120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b7261043881610903565b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac836040516104d29190610bdf565b60405180910390a2505050565b5f5f5f8381526020019081526020015f20600101549050919050565b610504826104df565b61050d81610903565b6105178383610917565b50505050565b610525610a00565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610589576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105938282610a07565b505050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea6105c281610903565b8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167fc060d8add9e7b6a84ecb7f29b08e239fad2c56c4f609dec6c17ab68d8655fe7d8360405161065c9190610bdf565b60405180910390a2505050565b7f120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b7281565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea61071a81610903565b8260035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548161ffff021916908360f01c02179055508160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508373ffffffffffffffffffffffffffffffffffffffff167fa09be255173b26f6e7520d96ef6279415258e6eea9b9295a29a448c4f81dab74848460405161080d929190610ed4565b60405180910390a250505050565b5f5f1b81565b6001602052805f5260405f205f915054906101000a900460ff1681565b610847826104df565b61085081610903565b61085a8383610a07565b50505050565b6003602052805f5260405f205f915054906101000a900460f01b81565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109148161090f610a00565b610af0565b50565b5f610922838361068d565b6109f65760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610993610a00565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506109fa565b5f90505b92915050565b5f33905090565b5f610a12838361068d565b15610ae6575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a83610a00565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610aea565b5f90505b92915050565b610afa828261068d565b610b3d5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b34929190610f0a565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b7981610b45565b8114610b83575f5ffd5b50565b5f81359050610b9481610b70565b92915050565b5f60208284031215610baf57610bae610b41565b5b5f610bbc84828501610b86565b91505092915050565b5f8115159050919050565b610bd981610bc5565b82525050565b5f602082019050610bf25f830184610bd0565b92915050565b5f819050919050565b610c0a81610bf8565b82525050565b5f602082019050610c235f830184610c01565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5282610c29565b9050919050565b610c6281610c48565b8114610c6c575f5ffd5b50565b5f81359050610c7d81610c59565b92915050565b5f60208284031215610c9857610c97610b41565b5b5f610ca584828501610c6f565b91505092915050565b5f60ff82169050919050565b610cc381610cae565b82525050565b5f602082019050610cdc5f830184610cba565b92915050565b610ceb81610bc5565b8114610cf5575f5ffd5b50565b5f81359050610d0681610ce2565b92915050565b5f5f60408385031215610d2257610d21610b41565b5b5f610d2f85828601610c6f565b9250506020610d4085828601610cf8565b9150509250929050565b610d5381610bf8565b8114610d5d575f5ffd5b50565b5f81359050610d6e81610d4a565b92915050565b5f60208284031215610d8957610d88610b41565b5b5f610d9684828501610d60565b91505092915050565b5f5f60408385031215610db557610db4610b41565b5b5f610dc285828601610d60565b9250506020610dd385828601610c6f565b9150509250929050565b5f7fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b610e1181610ddd565b8114610e1b575f5ffd5b50565b5f81359050610e2c81610e08565b92915050565b610e3b81610cae565b8114610e45575f5ffd5b50565b5f81359050610e5681610e32565b92915050565b5f5f5f60608486031215610e7357610e72610b41565b5b5f610e8086828701610c6f565b9350506020610e9186828701610e1e565b9250506040610ea286828701610e48565b9150509250925092565b610eb581610ddd565b82525050565b5f602082019050610ece5f830184610eac565b92915050565b5f604082019050610ee75f830185610eac565b610ef46020830184610cba565b9392505050565b610f0481610c48565b82525050565b5f604082019050610f1d5f830185610efb565b610f2a6020830184610c01565b939250505056fea2646970667358221220ab0aac065d5b7e6e3b24a5c0bc3d9acad517c4a393335835a3f1a023dc23a1fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1208 CODESIZE SUB DUP1 PUSH2 0x1208 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x43 PUSH0 PUSH0 SHL DUP3 PUSH2 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x74 PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA DUP3 PUSH2 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xA5 PUSH32 0x120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72 DUP3 PUSH2 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x294 JUMP JUMPDEST PUSH0 PUSH2 0xBD DUP4 DUP4 PUSH2 0x1A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x197 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x134 PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x19B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x238 DUP3 PUSH2 0x20F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH2 0x22E JUMP JUMPDEST DUP2 EQ PUSH2 0x252 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x263 DUP2 PUSH2 0x23F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x20B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28B DUP5 DUP3 DUP6 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF67 DUP1 PUSH2 0x2A1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C0CFBB0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB9209E33 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDCE9571F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x324 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8C0CFBB0 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x94792E8D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x28A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x7807AEBA EQ PUSH2 0x204 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x2D7FD92 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x5BD4970 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C6 JUMPI POP PUSH2 0x3C5 DUP3 PUSH2 0x89A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72 PUSH2 0x438 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x504 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 PUSH2 0x917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x525 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 DUP3 DUP3 PUSH2 0xA07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA PUSH2 0x5C2 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC060D8ADD9E7B6A84ECB7F29B08E239FAD2C56C4F609DEC6C17AB68D8655FE7D DUP4 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA PUSH2 0x71A DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF0 SHR MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA09BE255173B26F6E7520D96EF6279415258E6EEA9B9295A29A448C4F81DAB74 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x80D SWAP3 SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x847 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x850 DUP2 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x85A DUP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x914 DUP2 PUSH2 0x90F PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x922 DUP4 DUP4 PUSH2 0x68D JUMP JUMPDEST PUSH2 0x9F6 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x993 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9FA JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA12 DUP4 DUP4 PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0xAE6 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA83 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAEA JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP3 DUP3 PUSH2 0x68D JUMP JUMPDEST PUSH2 0xB3D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xB45 JUMP JUMPDEST DUP2 EQ PUSH2 0xB83 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH2 0xBAE PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBC DUP5 DUP3 DUP6 ADD PUSH2 0xB86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP2 PUSH2 0xBC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xC6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC7D DUP2 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC3 DUP2 PUSH2 0xCAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDC PUSH0 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xBC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD06 DUP2 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2F DUP6 DUP3 DUP7 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD40 DUP6 DUP3 DUP7 ADD PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD53 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6E DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD96 DUP5 DUP3 DUP6 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC2 DUP6 DUP3 DUP7 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE11 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP2 EQ PUSH2 0xE1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2C DUP2 PUSH2 0xE08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE3B DUP2 PUSH2 0xCAE JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE56 DUP2 PUSH2 0xE32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE80 DUP7 DUP3 DUP8 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE91 DUP7 DUP3 DUP8 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEA2 DUP7 DUP3 DUP8 ADD PUSH2 0xE48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH0 DUP4 ADD DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEE7 PUSH0 DUP4 ADD DUP6 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB EXP 0xAC MOD TSTORE JUMPDEST PUSH31 0x6E3B24A5C0BC3D9ACAD517C4A393335835A3F1A023DC23A1FD64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "393:1502:0:-:0;;;1138:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1175:37;2232:4:1;1186:18:0;;1206:5;1175:10;;;:37;;:::i;:::-;;1222:33;483:27;1249:5;1222:10;;;:33;;:::i;:::-;;1265:39;563:33;1298:5;1265:10;;;:39;;:::i;:::-;;1138:173;393:1502;;6179:316:1;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;393:1502:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_178": {
									"entryPoint": 2075,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@KYC_ADMIN_ROLE_10": {
									"entryPoint": 973,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SANCTIONS_ADMIN_ROLE_15": {
									"entryPoint": 1641,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_242": {
									"entryPoint": 2307,
									"id": 242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_263": {
									"entryPoint": 2800,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_405": {
									"entryPoint": 2327,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_539": {
									"entryPoint": 2560,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_443": {
									"entryPoint": 2567,
									"id": 443,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_277": {
									"entryPoint": 1247,
									"id": 277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_296": {
									"entryPoint": 1275,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_229": {
									"entryPoint": 1677,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@investorTypeOf_31": {
									"entryPoint": 1009,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_23": {
									"entryPoint": 2173,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isVerified_19": {
									"entryPoint": 2081,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@jurisdictionOf_27": {
									"entryPoint": 2144,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_338": {
									"entryPoint": 1309,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_315": {
									"entryPoint": 2110,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAttributes_147": {
									"entryPoint": 1776,
									"id": 147,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBlacklist_116": {
									"entryPoint": 1038,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setKyc_94": {
									"entryPoint": 1432,
									"id": 94,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_211": {
									"entryPoint": 852,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_580": {
									"entryPoint": 2202,
									"id": 580,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes2": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes2t_uint8": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes2_to_t_bytes2_fromStack": {
									"entryPoint": 3756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes2__to_t_bytes2__fromStack_reversed": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes2_t_uint8__to_t_bytes2_t_uint8__fromStack_reversed": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes2": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes2": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7486:6",
										"nodeType": "YulBlock",
										"src": "0:7486:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "378:105:6",
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nativeSrc": "388:89:6",
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:6",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nativeSrc": "399:78:6",
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:6",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:6",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nativeSrc": "531:78:6",
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:6",
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:6",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nativeSrc": "589:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nativeSrc": "589:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nativeSrc": "561:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nativeSrc": "551:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "541:62:6",
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:6",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nativeSrc": "666:86:6",
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nativeSrc": "676:29:6",
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nativeSrc": "685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nativeSrc": "714:32:6",
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nativeSrc": "714:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:6",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:6",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:6",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nativeSrc": "823:262:6",
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:6",
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nativeSrc": "871:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nativeSrc": "871:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nativeSrc": "840:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:6",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nativeSrc": "836:32:6",
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nativeSrc": "833:119:6",
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nativeSrc": "962:116:6",
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nativeSrc": "977:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:6",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:6",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:6",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nativeSrc": "1036:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nativeSrc": "1016:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:6",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:6",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:6",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nativeSrc": "1133:48:6",
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nativeSrc": "1143:32:6",
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nativeSrc": "1161:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nativeSrc": "1154:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:6",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:6",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nativeSrc": "1246:50:6",
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nativeSrc": "1268:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nativeSrc": "1256:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nativeSrc": "1256:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:6",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:6",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nativeSrc": "1394:118:6",
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nativeSrc": "1404:26:6",
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nativeSrc": "1412:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nativeSrc": "1487:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nativeSrc": "1440:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nativeSrc": "1440:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:6",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:6",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:6",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nativeSrc": "1563:32:6",
													"nodeType": "YulBlock",
													"src": "1563:32:6",
													"statements": [
														{
															"nativeSrc": "1573:16:6",
															"nodeType": "YulAssignment",
															"src": "1573:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:6",
																"nodeType": "YulIdentifier",
																"src": "1584:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:6",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:6",
														"nodeType": "YulTypedName",
														"src": "1555:7:6",
														"type": ""
													}
												],
												"src": "1518:77:6"
											},
											{
												"body": {
													"nativeSrc": "1666:53:6",
													"nodeType": "YulBlock",
													"src": "1666:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1688:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:6"
																		},
																		"nativeSrc": "1688:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:6"
																},
																"nativeSrc": "1676:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:6"
															},
															"nativeSrc": "1676:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1601:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:6",
														"nodeType": "YulTypedName",
														"src": "1654:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:6",
														"nodeType": "YulTypedName",
														"src": "1661:3:6",
														"type": ""
													}
												],
												"src": "1601:118:6"
											},
											{
												"body": {
													"nativeSrc": "1823:124:6",
													"nodeType": "YulBlock",
													"src": "1823:124:6",
													"statements": [
														{
															"nativeSrc": "1833:26:6",
															"nodeType": "YulAssignment",
															"src": "1833:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:6"
																},
																"nativeSrc": "1841:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:6"
																		},
																		"nativeSrc": "1922:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "1869:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:6"
																},
																"nativeSrc": "1869:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:6"
															},
															"nativeSrc": "1869:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1725:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:6",
														"nodeType": "YulTypedName",
														"src": "1795:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:6",
														"nodeType": "YulTypedName",
														"src": "1807:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:6",
														"nodeType": "YulTypedName",
														"src": "1818:4:6",
														"type": ""
													}
												],
												"src": "1725:222:6"
											},
											{
												"body": {
													"nativeSrc": "1998:81:6",
													"nodeType": "YulBlock",
													"src": "1998:81:6",
													"statements": [
														{
															"nativeSrc": "2008:65:6",
															"nodeType": "YulAssignment",
															"src": "2008:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2023:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2030:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2019:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:6"
																},
																"nativeSrc": "2019:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2019:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2008:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2008:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1953:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1980:5:6",
														"nodeType": "YulTypedName",
														"src": "1980:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1990:7:6",
														"nodeType": "YulTypedName",
														"src": "1990:7:6",
														"type": ""
													}
												],
												"src": "1953:126:6"
											},
											{
												"body": {
													"nativeSrc": "2130:51:6",
													"nodeType": "YulBlock",
													"src": "2130:51:6",
													"statements": [
														{
															"nativeSrc": "2140:35:6",
															"nodeType": "YulAssignment",
															"src": "2140:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2169:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2169:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2151:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2151:17:6"
																},
																"nativeSrc": "2151:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2151:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2140:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2140:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2085:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2112:5:6",
														"nodeType": "YulTypedName",
														"src": "2112:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2122:7:6",
														"nodeType": "YulTypedName",
														"src": "2122:7:6",
														"type": ""
													}
												],
												"src": "2085:96:6"
											},
											{
												"body": {
													"nativeSrc": "2230:79:6",
													"nodeType": "YulBlock",
													"src": "2230:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2287:16:6",
																"nodeType": "YulBlock",
																"src": "2287:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2296:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2299:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2299:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2289:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2289:6:6"
																			},
																			"nativeSrc": "2289:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2289:12:6"
																		},
																		"nativeSrc": "2289:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2289:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2253:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2278:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2278:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2260:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2260:17:6"
																				},
																				"nativeSrc": "2260:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2260:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2250:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2250:2:6"
																		},
																		"nativeSrc": "2250:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:6"
																},
																"nativeSrc": "2243:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2243:43:6"
															},
															"nativeSrc": "2240:63:6",
															"nodeType": "YulIf",
															"src": "2240:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2187:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2223:5:6",
														"nodeType": "YulTypedName",
														"src": "2223:5:6",
														"type": ""
													}
												],
												"src": "2187:122:6"
											},
											{
												"body": {
													"nativeSrc": "2367:87:6",
													"nodeType": "YulBlock",
													"src": "2367:87:6",
													"statements": [
														{
															"nativeSrc": "2377:29:6",
															"nodeType": "YulAssignment",
															"src": "2377:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2399:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2386:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2386:12:6"
																},
																"nativeSrc": "2386:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2386:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2377:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2442:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2442:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2415:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2415:26:6"
																},
																"nativeSrc": "2415:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2415:33:6"
															},
															"nativeSrc": "2415:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2415:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2315:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2353:3:6",
														"nodeType": "YulTypedName",
														"src": "2353:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2361:5:6",
														"nodeType": "YulTypedName",
														"src": "2361:5:6",
														"type": ""
													}
												],
												"src": "2315:139:6"
											},
											{
												"body": {
													"nativeSrc": "2526:263:6",
													"nodeType": "YulBlock",
													"src": "2526:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2572:83:6",
																"nodeType": "YulBlock",
																"src": "2572:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2574:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2574:77:6"
																			},
																			"nativeSrc": "2574:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2574:79:6"
																		},
																		"nativeSrc": "2574:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2574:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2547:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2547:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2556:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2543:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2543:3:6"
																		},
																		"nativeSrc": "2543:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2543:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2568:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2539:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2539:3:6"
																},
																"nativeSrc": "2539:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2539:32:6"
															},
															"nativeSrc": "2536:119:6",
															"nodeType": "YulIf",
															"src": "2536:119:6"
														},
														{
															"nativeSrc": "2665:117:6",
															"nodeType": "YulBlock",
															"src": "2665:117:6",
															"statements": [
																{
																	"nativeSrc": "2680:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2680:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2694:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2694:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2684:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2684:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2709:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2709:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2744:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2755:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2755:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2740:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2740:3:6"
																				},
																				"nativeSrc": "2740:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2740:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2764:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2764:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2719:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2719:20:6"
																		},
																		"nativeSrc": "2719:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2709:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2709:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2460:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2496:9:6",
														"nodeType": "YulTypedName",
														"src": "2496:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2507:7:6",
														"nodeType": "YulTypedName",
														"src": "2507:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2519:6:6",
														"nodeType": "YulTypedName",
														"src": "2519:6:6",
														"type": ""
													}
												],
												"src": "2460:329:6"
											},
											{
												"body": {
													"nativeSrc": "2838:43:6",
													"nodeType": "YulBlock",
													"src": "2838:43:6",
													"statements": [
														{
															"nativeSrc": "2848:27:6",
															"nodeType": "YulAssignment",
															"src": "2848:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2863:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2863:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2870:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2870:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2859:3:6"
																},
																"nativeSrc": "2859:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2859:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2848:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2848:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2795:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2820:5:6",
														"nodeType": "YulTypedName",
														"src": "2820:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2830:7:6",
														"nodeType": "YulTypedName",
														"src": "2830:7:6",
														"type": ""
													}
												],
												"src": "2795:86:6"
											},
											{
												"body": {
													"nativeSrc": "2948:51:6",
													"nodeType": "YulBlock",
													"src": "2948:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2965:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2965:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2986:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2986:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2970:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "2970:15:6"
																		},
																		"nativeSrc": "2970:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2970:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2958:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:6"
																},
																"nativeSrc": "2958:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2958:35:6"
															},
															"nativeSrc": "2958:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "2958:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "2887:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2943:3:6",
														"nodeType": "YulTypedName",
														"src": "2943:3:6",
														"type": ""
													}
												],
												"src": "2887:112:6"
											},
											{
												"body": {
													"nativeSrc": "3099:120:6",
													"nodeType": "YulBlock",
													"src": "3099:120:6",
													"statements": [
														{
															"nativeSrc": "3109:26:6",
															"nodeType": "YulAssignment",
															"src": "3109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:6"
																},
																"nativeSrc": "3117:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3109:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3185:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3185:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3209:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3209:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3194:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:6"
																		},
																		"nativeSrc": "3194:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "3145:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:39:6"
																},
																"nativeSrc": "3145:67:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:67:6"
															},
															"nativeSrc": "3145:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "3145:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3005:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3071:9:6",
														"nodeType": "YulTypedName",
														"src": "3071:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3083:6:6",
														"nodeType": "YulTypedName",
														"src": "3083:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3094:4:6",
														"nodeType": "YulTypedName",
														"src": "3094:4:6",
														"type": ""
													}
												],
												"src": "3005:214:6"
											},
											{
												"body": {
													"nativeSrc": "3265:76:6",
													"nodeType": "YulBlock",
													"src": "3265:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3319:16:6",
																"nodeType": "YulBlock",
																"src": "3319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3328:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3331:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3321:6:6"
																			},
																			"nativeSrc": "3321:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3321:12:6"
																		},
																		"nativeSrc": "3321:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3288:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3288:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3310:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3310:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3295:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "3295:14:6"
																				},
																				"nativeSrc": "3295:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3295:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3285:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3285:2:6"
																		},
																		"nativeSrc": "3285:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3285:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3278:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:6"
																},
																"nativeSrc": "3278:40:6",
																"nodeType": "YulFunctionCall",
																"src": "3278:40:6"
															},
															"nativeSrc": "3275:60:6",
															"nodeType": "YulIf",
															"src": "3275:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3225:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3258:5:6",
														"nodeType": "YulTypedName",
														"src": "3258:5:6",
														"type": ""
													}
												],
												"src": "3225:116:6"
											},
											{
												"body": {
													"nativeSrc": "3396:84:6",
													"nodeType": "YulBlock",
													"src": "3396:84:6",
													"statements": [
														{
															"nativeSrc": "3406:29:6",
															"nodeType": "YulAssignment",
															"src": "3406:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3428:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3428:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3415:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3415:12:6"
																},
																"nativeSrc": "3415:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3415:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3406:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3406:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3444:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "3444:23:6"
																},
																"nativeSrc": "3444:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3444:30:6"
															},
															"nativeSrc": "3444:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3444:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3347:133:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3374:6:6",
														"nodeType": "YulTypedName",
														"src": "3374:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3382:3:6",
														"nodeType": "YulTypedName",
														"src": "3382:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3390:5:6",
														"nodeType": "YulTypedName",
														"src": "3390:5:6",
														"type": ""
													}
												],
												"src": "3347:133:6"
											},
											{
												"body": {
													"nativeSrc": "3566:388:6",
													"nodeType": "YulBlock",
													"src": "3566:388:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3612:83:6",
																"nodeType": "YulBlock",
																"src": "3612:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3614:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3614:77:6"
																			},
																			"nativeSrc": "3614:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3614:79:6"
																		},
																		"nativeSrc": "3614:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3614:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3587:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3587:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3596:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:6"
																		},
																		"nativeSrc": "3583:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3583:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3608:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3608:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:32:6"
															},
															"nativeSrc": "3576:119:6",
															"nodeType": "YulIf",
															"src": "3576:119:6"
														},
														{
															"nativeSrc": "3705:117:6",
															"nodeType": "YulBlock",
															"src": "3705:117:6",
															"statements": [
																{
																	"nativeSrc": "3720:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3720:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3734:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3734:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3724:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3724:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3749:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3749:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3784:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3784:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3795:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3795:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3780:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3780:3:6"
																				},
																				"nativeSrc": "3780:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3780:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3804:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3759:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3759:20:6"
																		},
																		"nativeSrc": "3759:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3749:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3832:115:6",
															"nodeType": "YulBlock",
															"src": "3832:115:6",
															"statements": [
																{
																	"nativeSrc": "3847:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3847:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3861:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3851:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3851:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3877:60:6",
																	"nodeType": "YulAssignment",
																	"src": "3877:60:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3909:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3909:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3920:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3920:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3905:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3905:3:6"
																				},
																				"nativeSrc": "3905:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3905:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3929:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3929:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "3887:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3887:17:6"
																		},
																		"nativeSrc": "3887:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:50:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3877:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3877:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3486:468:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3528:9:6",
														"nodeType": "YulTypedName",
														"src": "3528:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3539:7:6",
														"nodeType": "YulTypedName",
														"src": "3539:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3551:6:6",
														"nodeType": "YulTypedName",
														"src": "3551:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3559:6:6",
														"nodeType": "YulTypedName",
														"src": "3559:6:6",
														"type": ""
													}
												],
												"src": "3486:468:6"
											},
											{
												"body": {
													"nativeSrc": "4003:79:6",
													"nodeType": "YulBlock",
													"src": "4003:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4060:16:6",
																"nodeType": "YulBlock",
																"src": "4060:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4069:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4069:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4072:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4072:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4062:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4062:6:6"
																			},
																			"nativeSrc": "4062:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4062:12:6"
																		},
																		"nativeSrc": "4062:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4062:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4026:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4026:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4051:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4051:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "4033:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4033:17:6"
																				},
																				"nativeSrc": "4033:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4033:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4023:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4023:2:6"
																		},
																		"nativeSrc": "4023:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4023:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:6"
																},
																"nativeSrc": "4016:43:6",
																"nodeType": "YulFunctionCall",
																"src": "4016:43:6"
															},
															"nativeSrc": "4013:63:6",
															"nodeType": "YulIf",
															"src": "4013:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3960:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3996:5:6",
														"nodeType": "YulTypedName",
														"src": "3996:5:6",
														"type": ""
													}
												],
												"src": "3960:122:6"
											},
											{
												"body": {
													"nativeSrc": "4140:87:6",
													"nodeType": "YulBlock",
													"src": "4140:87:6",
													"statements": [
														{
															"nativeSrc": "4150:29:6",
															"nodeType": "YulAssignment",
															"src": "4150:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4172:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4172:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4159:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4159:12:6"
																},
																"nativeSrc": "4159:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4159:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4150:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4150:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4215:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4215:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "4188:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "4188:26:6"
																},
																"nativeSrc": "4188:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4188:33:6"
															},
															"nativeSrc": "4188:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4188:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "4088:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4118:6:6",
														"nodeType": "YulTypedName",
														"src": "4118:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4126:3:6",
														"nodeType": "YulTypedName",
														"src": "4126:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4134:5:6",
														"nodeType": "YulTypedName",
														"src": "4134:5:6",
														"type": ""
													}
												],
												"src": "4088:139:6"
											},
											{
												"body": {
													"nativeSrc": "4299:263:6",
													"nodeType": "YulBlock",
													"src": "4299:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4345:83:6",
																"nodeType": "YulBlock",
																"src": "4345:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4347:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4347:77:6"
																			},
																			"nativeSrc": "4347:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4347:79:6"
																		},
																		"nativeSrc": "4347:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4347:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4320:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4320:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4329:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4329:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4316:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:6"
																		},
																		"nativeSrc": "4316:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4316:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4341:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4312:3:6"
																},
																"nativeSrc": "4312:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4312:32:6"
															},
															"nativeSrc": "4309:119:6",
															"nodeType": "YulIf",
															"src": "4309:119:6"
														},
														{
															"nativeSrc": "4438:117:6",
															"nodeType": "YulBlock",
															"src": "4438:117:6",
															"statements": [
																{
																	"nativeSrc": "4453:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4453:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4467:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4467:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4457:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4457:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4482:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4482:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4517:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4517:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4528:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4528:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4513:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4513:3:6"
																				},
																				"nativeSrc": "4513:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4513:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4537:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4537:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4492:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4492:20:6"
																		},
																		"nativeSrc": "4492:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4482:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4482:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "4233:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4269:9:6",
														"nodeType": "YulTypedName",
														"src": "4269:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4280:7:6",
														"nodeType": "YulTypedName",
														"src": "4280:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4292:6:6",
														"nodeType": "YulTypedName",
														"src": "4292:6:6",
														"type": ""
													}
												],
												"src": "4233:329:6"
											},
											{
												"body": {
													"nativeSrc": "4651:391:6",
													"nodeType": "YulBlock",
													"src": "4651:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4697:83:6",
																"nodeType": "YulBlock",
																"src": "4697:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4699:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4699:77:6"
																			},
																			"nativeSrc": "4699:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4699:79:6"
																		},
																		"nativeSrc": "4699:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4672:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4672:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4681:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4668:3:6"
																		},
																		"nativeSrc": "4668:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4668:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4693:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4693:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:6"
																},
																"nativeSrc": "4664:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4664:32:6"
															},
															"nativeSrc": "4661:119:6",
															"nodeType": "YulIf",
															"src": "4661:119:6"
														},
														{
															"nativeSrc": "4790:117:6",
															"nodeType": "YulBlock",
															"src": "4790:117:6",
															"statements": [
																{
																	"nativeSrc": "4805:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4805:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4819:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4819:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4809:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4809:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4834:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4834:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4869:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4869:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4880:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4880:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4865:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4865:3:6"
																				},
																				"nativeSrc": "4865:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4865:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4889:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4889:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4844:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4844:20:6"
																		},
																		"nativeSrc": "4844:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4834:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4834:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4917:118:6",
															"nodeType": "YulBlock",
															"src": "4917:118:6",
															"statements": [
																{
																	"nativeSrc": "4932:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4932:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4946:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4936:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4936:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4962:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4962:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4997:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4997:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5008:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5008:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4993:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4993:3:6"
																				},
																				"nativeSrc": "4993:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4993:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5017:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5017:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4972:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4972:20:6"
																		},
																		"nativeSrc": "4972:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4972:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4962:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4962:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4568:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4613:9:6",
														"nodeType": "YulTypedName",
														"src": "4613:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4624:7:6",
														"nodeType": "YulTypedName",
														"src": "4624:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4636:6:6",
														"nodeType": "YulTypedName",
														"src": "4636:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4644:6:6",
														"nodeType": "YulTypedName",
														"src": "4644:6:6",
														"type": ""
													}
												],
												"src": "4568:474:6"
											},
											{
												"body": {
													"nativeSrc": "5092:105:6",
													"nodeType": "YulBlock",
													"src": "5092:105:6",
													"statements": [
														{
															"nativeSrc": "5102:89:6",
															"nodeType": "YulAssignment",
															"src": "5102:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5117:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5117:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5124:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5124:66:6",
																		"type": "",
																		"value": "0xffff000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5113:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:6"
																},
																"nativeSrc": "5113:78:6",
																"nodeType": "YulFunctionCall",
																"src": "5113:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5102:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5102:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes2",
												"nativeSrc": "5048:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5074:5:6",
														"nodeType": "YulTypedName",
														"src": "5074:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5084:7:6",
														"nodeType": "YulTypedName",
														"src": "5084:7:6",
														"type": ""
													}
												],
												"src": "5048:149:6"
											},
											{
												"body": {
													"nativeSrc": "5245:78:6",
													"nodeType": "YulBlock",
													"src": "5245:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5301:16:6",
																"nodeType": "YulBlock",
																"src": "5301:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5310:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5310:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5313:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5313:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5303:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:6"
																			},
																			"nativeSrc": "5303:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5303:12:6"
																		},
																		"nativeSrc": "5303:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5303:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5268:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5268:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5292:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5292:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes2",
																					"nativeSrc": "5275:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "5275:16:6"
																				},
																				"nativeSrc": "5275:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5275:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5265:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5265:2:6"
																		},
																		"nativeSrc": "5265:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5265:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:6"
																},
																"nativeSrc": "5258:42:6",
																"nodeType": "YulFunctionCall",
																"src": "5258:42:6"
															},
															"nativeSrc": "5255:62:6",
															"nodeType": "YulIf",
															"src": "5255:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes2",
												"nativeSrc": "5203:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5238:5:6",
														"nodeType": "YulTypedName",
														"src": "5238:5:6",
														"type": ""
													}
												],
												"src": "5203:120:6"
											},
											{
												"body": {
													"nativeSrc": "5380:86:6",
													"nodeType": "YulBlock",
													"src": "5380:86:6",
													"statements": [
														{
															"nativeSrc": "5390:29:6",
															"nodeType": "YulAssignment",
															"src": "5390:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5412:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5412:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5399:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5399:12:6"
																},
																"nativeSrc": "5399:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5399:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5390:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5390:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5454:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5454:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes2",
																	"nativeSrc": "5428:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5428:25:6"
																},
																"nativeSrc": "5428:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5428:32:6"
															},
															"nativeSrc": "5428:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "5428:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes2",
												"nativeSrc": "5329:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5358:6:6",
														"nodeType": "YulTypedName",
														"src": "5358:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5366:3:6",
														"nodeType": "YulTypedName",
														"src": "5366:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5374:5:6",
														"nodeType": "YulTypedName",
														"src": "5374:5:6",
														"type": ""
													}
												],
												"src": "5329:137:6"
											},
											{
												"body": {
													"nativeSrc": "5513:77:6",
													"nodeType": "YulBlock",
													"src": "5513:77:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5568:16:6",
																"nodeType": "YulBlock",
																"src": "5568:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5577:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5577:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5580:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5580:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5570:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5570:6:6"
																			},
																			"nativeSrc": "5570:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5570:12:6"
																		},
																		"nativeSrc": "5570:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5536:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5559:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5559:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "5543:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5543:15:6"
																				},
																				"nativeSrc": "5543:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5543:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5533:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5533:2:6"
																		},
																		"nativeSrc": "5533:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5526:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:6"
																},
																"nativeSrc": "5526:41:6",
																"nodeType": "YulFunctionCall",
																"src": "5526:41:6"
															},
															"nativeSrc": "5523:61:6",
															"nodeType": "YulIf",
															"src": "5523:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "5472:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5506:5:6",
														"nodeType": "YulTypedName",
														"src": "5506:5:6",
														"type": ""
													}
												],
												"src": "5472:118:6"
											},
											{
												"body": {
													"nativeSrc": "5646:85:6",
													"nodeType": "YulBlock",
													"src": "5646:85:6",
													"statements": [
														{
															"nativeSrc": "5656:29:6",
															"nodeType": "YulAssignment",
															"src": "5656:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5678:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5678:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5665:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5665:12:6"
																},
																"nativeSrc": "5665:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5665:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5656:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5656:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5719:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5719:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "5694:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "5694:24:6"
																},
																"nativeSrc": "5694:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5694:31:6"
															},
															"nativeSrc": "5694:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5694:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "5596:135:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5624:6:6",
														"nodeType": "YulTypedName",
														"src": "5624:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5632:3:6",
														"nodeType": "YulTypedName",
														"src": "5632:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5640:5:6",
														"nodeType": "YulTypedName",
														"src": "5640:5:6",
														"type": ""
													}
												],
												"src": "5596:135:6"
											},
											{
												"body": {
													"nativeSrc": "5834:516:6",
													"nodeType": "YulBlock",
													"src": "5834:516:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5880:83:6",
																"nodeType": "YulBlock",
																"src": "5880:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5882:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5882:77:6"
																			},
																			"nativeSrc": "5882:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5882:79:6"
																		},
																		"nativeSrc": "5882:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5882:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5855:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5855:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5864:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5864:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5851:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:6"
																		},
																		"nativeSrc": "5851:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5876:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5847:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5847:3:6"
																},
																"nativeSrc": "5847:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5847:32:6"
															},
															"nativeSrc": "5844:119:6",
															"nodeType": "YulIf",
															"src": "5844:119:6"
														},
														{
															"nativeSrc": "5973:117:6",
															"nodeType": "YulBlock",
															"src": "5973:117:6",
															"statements": [
																{
																	"nativeSrc": "5988:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5988:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6002:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6002:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5992:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5992:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6017:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6017:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6052:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6052:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6063:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6063:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6048:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6048:3:6"
																				},
																				"nativeSrc": "6048:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6072:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6072:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6027:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6027:20:6"
																		},
																		"nativeSrc": "6027:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6027:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6017:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6017:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6100:117:6",
															"nodeType": "YulBlock",
															"src": "6100:117:6",
															"statements": [
																{
																	"nativeSrc": "6115:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6115:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6129:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6129:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6119:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6119:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6145:62:6",
																	"nodeType": "YulAssignment",
																	"src": "6145:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6179:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6179:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6190:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6190:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6175:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6175:3:6"
																				},
																				"nativeSrc": "6175:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6175:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6199:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6199:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes2",
																			"nativeSrc": "6155:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "6155:19:6"
																		},
																		"nativeSrc": "6155:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6145:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6145:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6227:116:6",
															"nodeType": "YulBlock",
															"src": "6227:116:6",
															"statements": [
																{
																	"nativeSrc": "6242:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6242:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6256:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6256:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6246:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6246:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6272:61:6",
																	"nodeType": "YulAssignment",
																	"src": "6272:61:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6305:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6305:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6316:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6316:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6301:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6301:3:6"
																				},
																				"nativeSrc": "6301:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6301:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6325:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6325:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "6282:18:6",
																			"nodeType": "YulIdentifier",
																			"src": "6282:18:6"
																		},
																		"nativeSrc": "6282:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6282:51:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6272:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6272:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes2t_uint8",
												"nativeSrc": "5737:613:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5788:9:6",
														"nodeType": "YulTypedName",
														"src": "5788:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5799:7:6",
														"nodeType": "YulTypedName",
														"src": "5799:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5811:6:6",
														"nodeType": "YulTypedName",
														"src": "5811:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5819:6:6",
														"nodeType": "YulTypedName",
														"src": "5819:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5827:6:6",
														"nodeType": "YulTypedName",
														"src": "5827:6:6",
														"type": ""
													}
												],
												"src": "5737:613:6"
											},
											{
												"body": {
													"nativeSrc": "6419:52:6",
													"nodeType": "YulBlock",
													"src": "6419:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6458:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6458:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes2",
																			"nativeSrc": "6441:16:6",
																			"nodeType": "YulIdentifier",
																			"src": "6441:16:6"
																		},
																		"nativeSrc": "6441:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:6"
																},
																"nativeSrc": "6429:36:6",
																"nodeType": "YulFunctionCall",
																"src": "6429:36:6"
															},
															"nativeSrc": "6429:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "6429:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes2_to_t_bytes2_fromStack",
												"nativeSrc": "6356:115:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:6",
														"nodeType": "YulTypedName",
														"src": "6407:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:6",
														"nodeType": "YulTypedName",
														"src": "6414:3:6",
														"type": ""
													}
												],
												"src": "6356:115:6"
											},
											{
												"body": {
													"nativeSrc": "6573:122:6",
													"nodeType": "YulBlock",
													"src": "6573:122:6",
													"statements": [
														{
															"nativeSrc": "6583:26:6",
															"nodeType": "YulAssignment",
															"src": "6583:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6595:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6595:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6606:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6606:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6591:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6591:3:6"
																},
																"nativeSrc": "6591:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6591:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6583:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6583:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6661:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6661:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6674:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6674:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6685:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6685:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6670:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6670:3:6"
																		},
																		"nativeSrc": "6670:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes2_to_t_bytes2_fromStack",
																	"nativeSrc": "6619:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "6619:41:6"
																},
																"nativeSrc": "6619:69:6",
																"nodeType": "YulFunctionCall",
																"src": "6619:69:6"
															},
															"nativeSrc": "6619:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "6619:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes2__to_t_bytes2__fromStack_reversed",
												"nativeSrc": "6477:218:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6545:9:6",
														"nodeType": "YulTypedName",
														"src": "6545:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6557:6:6",
														"nodeType": "YulTypedName",
														"src": "6557:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6568:4:6",
														"nodeType": "YulTypedName",
														"src": "6568:4:6",
														"type": ""
													}
												],
												"src": "6477:218:6"
											},
											{
												"body": {
													"nativeSrc": "6821:200:6",
													"nodeType": "YulBlock",
													"src": "6821:200:6",
													"statements": [
														{
															"nativeSrc": "6831:26:6",
															"nodeType": "YulAssignment",
															"src": "6831:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6843:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6843:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6854:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6839:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6839:3:6"
																},
																"nativeSrc": "6839:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6839:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6831:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6909:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6909:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6922:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6922:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6933:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6933:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6918:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6918:3:6"
																		},
																		"nativeSrc": "6918:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6918:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes2_to_t_bytes2_fromStack",
																	"nativeSrc": "6867:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "6867:41:6"
																},
																"nativeSrc": "6867:69:6",
																"nodeType": "YulFunctionCall",
																"src": "6867:69:6"
															},
															"nativeSrc": "6867:69:6",
															"nodeType": "YulExpressionStatement",
															"src": "6867:69:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6986:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7010:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:6"
																		},
																		"nativeSrc": "6995:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:6"
																},
																"nativeSrc": "6946:68:6",
																"nodeType": "YulFunctionCall",
																"src": "6946:68:6"
															},
															"nativeSrc": "6946:68:6",
															"nodeType": "YulExpressionStatement",
															"src": "6946:68:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes2_t_uint8__to_t_bytes2_t_uint8__fromStack_reversed",
												"nativeSrc": "6701:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6785:9:6",
														"nodeType": "YulTypedName",
														"src": "6785:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6797:6:6",
														"nodeType": "YulTypedName",
														"src": "6797:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6805:6:6",
														"nodeType": "YulTypedName",
														"src": "6805:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6816:4:6",
														"nodeType": "YulTypedName",
														"src": "6816:4:6",
														"type": ""
													}
												],
												"src": "6701:320:6"
											},
											{
												"body": {
													"nativeSrc": "7092:53:6",
													"nodeType": "YulBlock",
													"src": "7092:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7109:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7132:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7132:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7114:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "7114:17:6"
																		},
																		"nativeSrc": "7114:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7114:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7102:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:6"
																},
																"nativeSrc": "7102:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7102:37:6"
															},
															"nativeSrc": "7102:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7102:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7027:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7080:5:6",
														"nodeType": "YulTypedName",
														"src": "7080:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7087:3:6",
														"nodeType": "YulTypedName",
														"src": "7087:3:6",
														"type": ""
													}
												],
												"src": "7027:118:6"
											},
											{
												"body": {
													"nativeSrc": "7277:206:6",
													"nodeType": "YulBlock",
													"src": "7277:206:6",
													"statements": [
														{
															"nativeSrc": "7287:26:6",
															"nodeType": "YulAssignment",
															"src": "7287:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7299:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7299:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7310:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7310:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:6"
																},
																"nativeSrc": "7295:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7295:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7287:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7287:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7367:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7380:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7391:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7391:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7376:3:6"
																		},
																		"nativeSrc": "7376:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7376:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7323:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7323:43:6"
																},
																"nativeSrc": "7323:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7323:71:6"
															},
															"nativeSrc": "7323:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7323:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7448:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7448:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7461:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7461:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7472:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7472:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7457:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7457:3:6"
																		},
																		"nativeSrc": "7457:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7457:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7404:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7404:43:6"
																},
																"nativeSrc": "7404:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7404:72:6"
															},
															"nativeSrc": "7404:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7404:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "7151:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7241:9:6",
														"nodeType": "YulTypedName",
														"src": "7241:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7253:6:6",
														"nodeType": "YulTypedName",
														"src": "7253:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7261:6:6",
														"nodeType": "YulTypedName",
														"src": "7261:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7272:4:6",
														"nodeType": "YulTypedName",
														"src": "7272:4:6",
														"type": ""
													}
												],
												"src": "7151:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes2(value) {\n        if iszero(eq(value, cleanup_t_bytes2(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes2(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes2(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes2t_uint8(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes2(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes2(value))\n    }\n\n    function abi_encode_tuple_t_bytes2__to_t_bytes2__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes2_to_t_bytes2_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes2_t_uint8__to_t_bytes2_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes2_to_t_bytes2_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c80638c0cfbb011610095578063b9209e3311610064578063b9209e33146102a8578063d547741f146102d8578063dce9571f146102f4578063fe575a8714610324576100fe565b80638c0cfbb01461022057806391d148541461023e57806394792e8d1461026e578063a217fddf1461028a576100fe565b8063248a9ca3116100d1578063248a9ca31461019c5780632f2ff15d146101cc57806336568abe146101e85780637807aeba14610204576100fe565b806301ffc9a71461010257806302d7fd921461013257806305bd497014610150578063153b0d1e14610180575b5f5ffd5b61011c60048036038101906101179190610b9a565b610354565b6040516101299190610bdf565b60405180910390f35b61013a6103cd565b6040516101479190610c10565b60405180910390f35b61016a60048036038101906101659190610c83565b6103f1565b6040516101779190610cc9565b60405180910390f35b61019a60048036038101906101959190610d0c565b61040e565b005b6101b660048036038101906101b19190610d74565b6104df565b6040516101c39190610c10565b60405180910390f35b6101e660048036038101906101e19190610d9f565b6104fb565b005b61020260048036038101906101fd9190610d9f565b61051d565b005b61021e60048036038101906102199190610d0c565b610598565b005b610228610669565b6040516102359190610c10565b60405180910390f35b61025860048036038101906102539190610d9f565b61068d565b6040516102659190610bdf565b60405180910390f35b61028860048036038101906102839190610e5c565b6106f0565b005b61029261081b565b60405161029f9190610c10565b60405180910390f35b6102c260048036038101906102bd9190610c83565b610821565b6040516102cf9190610bdf565b60405180910390f35b6102f260048036038101906102ed9190610d9f565b61083e565b005b61030e60048036038101906103099190610c83565b610860565b60405161031b9190610ebb565b60405180910390f35b61033e60048036038101906103399190610c83565b61087d565b60405161034b9190610bdf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c657506103c58261089a565b5b9050919050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea81565b6004602052805f5260405f205f915054906101000a900460ff1681565b7f120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b7261043881610903565b8160025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac836040516104d29190610bdf565b60405180910390a2505050565b5f5f5f8381526020019081526020015f20600101549050919050565b610504826104df565b61050d81610903565b6105178383610917565b50505050565b610525610a00565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610589576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105938282610a07565b505050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea6105c281610903565b8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167fc060d8add9e7b6a84ecb7f29b08e239fad2c56c4f609dec6c17ab68d8655fe7d8360405161065c9190610bdf565b60405180910390a2505050565b7f120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b7281565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea61071a81610903565b8260035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548161ffff021916908360f01c02179055508160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360ff1602179055508373ffffffffffffffffffffffffffffffffffffffff167fa09be255173b26f6e7520d96ef6279415258e6eea9b9295a29a448c4f81dab74848460405161080d929190610ed4565b60405180910390a250505050565b5f5f1b81565b6001602052805f5260405f205f915054906101000a900460ff1681565b610847826104df565b61085081610903565b61085a8383610a07565b50505050565b6003602052805f5260405f205f915054906101000a900460f01b81565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109148161090f610a00565b610af0565b50565b5f610922838361068d565b6109f65760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610993610a00565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506109fa565b5f90505b92915050565b5f33905090565b5f610a12838361068d565b15610ae6575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a83610a00565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610aea565b5f90505b92915050565b610afa828261068d565b610b3d5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b34929190610f0a565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b7981610b45565b8114610b83575f5ffd5b50565b5f81359050610b9481610b70565b92915050565b5f60208284031215610baf57610bae610b41565b5b5f610bbc84828501610b86565b91505092915050565b5f8115159050919050565b610bd981610bc5565b82525050565b5f602082019050610bf25f830184610bd0565b92915050565b5f819050919050565b610c0a81610bf8565b82525050565b5f602082019050610c235f830184610c01565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5282610c29565b9050919050565b610c6281610c48565b8114610c6c575f5ffd5b50565b5f81359050610c7d81610c59565b92915050565b5f60208284031215610c9857610c97610b41565b5b5f610ca584828501610c6f565b91505092915050565b5f60ff82169050919050565b610cc381610cae565b82525050565b5f602082019050610cdc5f830184610cba565b92915050565b610ceb81610bc5565b8114610cf5575f5ffd5b50565b5f81359050610d0681610ce2565b92915050565b5f5f60408385031215610d2257610d21610b41565b5b5f610d2f85828601610c6f565b9250506020610d4085828601610cf8565b9150509250929050565b610d5381610bf8565b8114610d5d575f5ffd5b50565b5f81359050610d6e81610d4a565b92915050565b5f60208284031215610d8957610d88610b41565b5b5f610d9684828501610d60565b91505092915050565b5f5f60408385031215610db557610db4610b41565b5b5f610dc285828601610d60565b9250506020610dd385828601610c6f565b9150509250929050565b5f7fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b610e1181610ddd565b8114610e1b575f5ffd5b50565b5f81359050610e2c81610e08565b92915050565b610e3b81610cae565b8114610e45575f5ffd5b50565b5f81359050610e5681610e32565b92915050565b5f5f5f60608486031215610e7357610e72610b41565b5b5f610e8086828701610c6f565b9350506020610e9186828701610e1e565b9250506040610ea286828701610e48565b9150509250925092565b610eb581610ddd565b82525050565b5f602082019050610ece5f830184610eac565b92915050565b5f604082019050610ee75f830185610eac565b610ef46020830184610cba565b9392505050565b610f0481610c48565b82525050565b5f604082019050610f1d5f830185610efb565b610f2a6020830184610c01565b939250505056fea2646970667358221220ab0aac065d5b7e6e3b24a5c0bc3d9acad517c4a393335835a3f1a023dc23a1fd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C0CFBB0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB9209E33 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDCE9571F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x324 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x8C0CFBB0 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x94792E8D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x28A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x7807AEBA EQ PUSH2 0x204 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x2D7FD92 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x5BD4970 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C6 JUMPI POP PUSH2 0x3C5 DUP3 PUSH2 0x89A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72 PUSH2 0x438 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x504 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x517 DUP4 DUP4 PUSH2 0x917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x525 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 DUP3 DUP3 PUSH2 0xA07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA PUSH2 0x5C2 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC060D8ADD9E7B6A84ECB7F29B08E239FAD2C56C4F609DEC6C17AB68D8655FE7D DUP4 PUSH1 0x40 MLOAD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA PUSH2 0x71A DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF0 SHR MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA09BE255173B26F6E7520D96EF6279415258E6EEA9B9295A29A448C4F81DAB74 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x80D SWAP3 SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x847 DUP3 PUSH2 0x4DF JUMP JUMPDEST PUSH2 0x850 DUP2 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x85A DUP4 DUP4 PUSH2 0xA07 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x914 DUP2 PUSH2 0x90F PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x922 DUP4 DUP4 PUSH2 0x68D JUMP JUMPDEST PUSH2 0x9F6 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x993 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9FA JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA12 DUP4 DUP4 PUSH2 0x68D JUMP JUMPDEST ISZERO PUSH2 0xAE6 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA83 PUSH2 0xA00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAEA JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFA DUP3 DUP3 PUSH2 0x68D JUMP JUMPDEST PUSH2 0xB3D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB79 DUP2 PUSH2 0xB45 JUMP JUMPDEST DUP2 EQ PUSH2 0xB83 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB94 DUP2 PUSH2 0xB70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH2 0xBAE PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBC DUP5 DUP3 DUP6 ADD PUSH2 0xB86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP2 PUSH2 0xBC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH0 DUP4 ADD DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC62 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xC6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC7D DUP2 PUSH2 0xC59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC98 JUMPI PUSH2 0xC97 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC3 DUP2 PUSH2 0xCAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDC PUSH0 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEB DUP2 PUSH2 0xBC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD06 DUP2 PUSH2 0xCE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2F DUP6 DUP3 DUP7 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD40 DUP6 DUP3 DUP7 ADD PUSH2 0xCF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD53 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6E DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD96 DUP5 DUP3 DUP6 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC2 DUP6 DUP3 DUP7 ADD PUSH2 0xD60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD3 DUP6 DUP3 DUP7 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE11 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP2 EQ PUSH2 0xE1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2C DUP2 PUSH2 0xE08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE3B DUP2 PUSH2 0xCAE JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE56 DUP2 PUSH2 0xE32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE72 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE80 DUP7 DUP3 DUP8 ADD PUSH2 0xC6F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE91 DUP7 DUP3 DUP8 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEA2 DUP7 DUP3 DUP8 ADD PUSH2 0xE48 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH0 DUP4 ADD DUP5 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEE7 PUSH0 DUP4 ADD DUP6 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xF2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB EXP 0xAC MOD TSTORE JUMPDEST PUSH31 0x6E3B24A5C0BC3D9ACAD517C4A393335835A3F1A023DC23A1FD64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "393:1502:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:68:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;842:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1469:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1317:146:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;516:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:251:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:42:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;747:48:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;672:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:1;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;442:68:0:-;483:27;442:68;:::o;842:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;1469:167::-;563:33;2464:16:1;2475:4;2464:10;:16::i;:::-;1586:2:0::1;1564:13;:19;1578:4;1564:19;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1620:4;1603:26;;;1626:2;1603:26;;;;;;:::i;:::-;;;;;;;;1469:167:::0;;;:::o;3810:120:1:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1317:146:0:-;483:27;2464:16:1;2475:4;2464:10;:16::i;:::-;1419:2:0::1;1400:10;:16;1411:4;1400:16;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1447:4;1436:20;;;1453:2;1436:20;;;;;;:::i;:::-;;;;;;;;1317:146:::0;;;:::o;516:80::-;563:33;516:80;:::o;2854:136:1:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1642:251:0:-;483:27;2464:16:1;2475:4;2464:10;:16::i;:::-;1787:5:0::1;1764:14;:20;1779:4;1764:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1825:7;1802:14;:20;1817:4;1802:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1865:4;1847:39;;;1871:5;1878:7;1847:39;;;;;;;:::i;:::-;;;;;;;;1642:251:::0;;;;:::o;2187:49:1:-;2232:4;2187:49;;;:::o;603:42:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;4642:138:1:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;747:48:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;672:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;762:146:4:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:1:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;6730:317:1:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:126::-;1990:7;2030:42;2023:5;2019:54;2008:65;;1953:126;;;:::o;2085:96::-;2122:7;2151:24;2169:5;2151:24;:::i;:::-;2140:35;;2085:96;;;:::o;2187:122::-;2260:24;2278:5;2260:24;:::i;:::-;2253:5;2250:35;2240:63;;2299:1;2296;2289:12;2240:63;2187:122;:::o;2315:139::-;2361:5;2399:6;2386:20;2377:29;;2415:33;2442:5;2415:33;:::i;:::-;2315:139;;;;:::o;2460:329::-;2519:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:119;;;2574:79;;:::i;:::-;2536:119;2694:1;2719:53;2764:7;2755:6;2744:9;2740:22;2719:53;:::i;:::-;2709:63;;2665:117;2460:329;;;;:::o;2795:86::-;2830:7;2870:4;2863:5;2859:16;2848:27;;2795:86;;;:::o;2887:112::-;2970:22;2986:5;2970:22;:::i;:::-;2965:3;2958:35;2887:112;;:::o;3005:214::-;3094:4;3132:2;3121:9;3117:18;3109:26;;3145:67;3209:1;3198:9;3194:17;3185:6;3145:67;:::i;:::-;3005:214;;;;:::o;3225:116::-;3295:21;3310:5;3295:21;:::i;:::-;3288:5;3285:32;3275:60;;3331:1;3328;3321:12;3275:60;3225:116;:::o;3347:133::-;3390:5;3428:6;3415:20;3406:29;;3444:30;3468:5;3444:30;:::i;:::-;3347:133;;;;:::o;3486:468::-;3551:6;3559;3608:2;3596:9;3587:7;3583:23;3579:32;3576:119;;;3614:79;;:::i;:::-;3576:119;3734:1;3759:53;3804:7;3795:6;3784:9;3780:22;3759:53;:::i;:::-;3749:63;;3705:117;3861:2;3887:50;3929:7;3920:6;3909:9;3905:22;3887:50;:::i;:::-;3877:60;;3832:115;3486:468;;;;;:::o;3960:122::-;4033:24;4051:5;4033:24;:::i;:::-;4026:5;4023:35;4013:63;;4072:1;4069;4062:12;4013:63;3960:122;:::o;4088:139::-;4134:5;4172:6;4159:20;4150:29;;4188:33;4215:5;4188:33;:::i;:::-;4088:139;;;;:::o;4233:329::-;4292:6;4341:2;4329:9;4320:7;4316:23;4312:32;4309:119;;;4347:79;;:::i;:::-;4309:119;4467:1;4492:53;4537:7;4528:6;4517:9;4513:22;4492:53;:::i;:::-;4482:63;;4438:117;4233:329;;;;:::o;4568:474::-;4636:6;4644;4693:2;4681:9;4672:7;4668:23;4664:32;4661:119;;;4699:79;;:::i;:::-;4661:119;4819:1;4844:53;4889:7;4880:6;4869:9;4865:22;4844:53;:::i;:::-;4834:63;;4790:117;4946:2;4972:53;5017:7;5008:6;4997:9;4993:22;4972:53;:::i;:::-;4962:63;;4917:118;4568:474;;;;;:::o;5048:149::-;5084:7;5124:66;5117:5;5113:78;5102:89;;5048:149;;;:::o;5203:120::-;5275:23;5292:5;5275:23;:::i;:::-;5268:5;5265:34;5255:62;;5313:1;5310;5303:12;5255:62;5203:120;:::o;5329:137::-;5374:5;5412:6;5399:20;5390:29;;5428:32;5454:5;5428:32;:::i;:::-;5329:137;;;;:::o;5472:118::-;5543:22;5559:5;5543:22;:::i;:::-;5536:5;5533:33;5523:61;;5580:1;5577;5570:12;5523:61;5472:118;:::o;5596:135::-;5640:5;5678:6;5665:20;5656:29;;5694:31;5719:5;5694:31;:::i;:::-;5596:135;;;;:::o;5737:613::-;5811:6;5819;5827;5876:2;5864:9;5855:7;5851:23;5847:32;5844:119;;;5882:79;;:::i;:::-;5844:119;6002:1;6027:53;6072:7;6063:6;6052:9;6048:22;6027:53;:::i;:::-;6017:63;;5973:117;6129:2;6155:52;6199:7;6190:6;6179:9;6175:22;6155:52;:::i;:::-;6145:62;;6100:117;6256:2;6282:51;6325:7;6316:6;6305:9;6301:22;6282:51;:::i;:::-;6272:61;;6227:116;5737:613;;;;;:::o;6356:115::-;6441:23;6458:5;6441:23;:::i;:::-;6436:3;6429:36;6356:115;;:::o;6477:218::-;6568:4;6606:2;6595:9;6591:18;6583:26;;6619:69;6685:1;6674:9;6670:17;6661:6;6619:69;:::i;:::-;6477:218;;;;:::o;6701:320::-;6816:4;6854:2;6843:9;6839:18;6831:26;;6867:69;6933:1;6922:9;6918:17;6909:6;6867:69;:::i;:::-;6946:68;7010:2;6999:9;6995:18;6986:6;6946:68;:::i;:::-;6701:320;;;;;:::o;7027:118::-;7114:24;7132:5;7114:24;:::i;:::-;7109:3;7102:37;7027:118;;:::o;7151:332::-;7272:4;7310:2;7299:9;7295:18;7287:26;;7323:71;7391:1;7380:9;7376:17;7367:6;7323:71;:::i;:::-;7404:72;7472:2;7461:9;7457:18;7448:6;7404:72;:::i;:::-;7151:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "788600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "418",
								"KYC_ADMIN_ROLE()": "371",
								"SANCTIONS_ADMIN_ROLE()": "348",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3165",
								"investorTypeOf(address)": "2901",
								"isBlacklisted(address)": "2921",
								"isVerified(address)": "2855",
								"jurisdictionOf(address)": "2899",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setAttributes(address,bytes2,uint8)": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setKyc(address,bool)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1138,
									"end": 1311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1204,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1206,
									"end": 1211,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1175,
									"end": 1185,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1175,
									"end": 1185,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA"
								},
								{
									"begin": 1249,
									"end": 1254,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1222,
									"end": 1232,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1232,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1222,
									"end": 1255,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 563,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72"
								},
								{
									"begin": 1298,
									"end": 1303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1265,
									"end": 1304,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1311,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 1895,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab0aac065d5b7e6e3b24a5c0bc3d9acad517c4a393335835a3f1a023dc23a1fd64736f6c634300081e0033",
									".code": [
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "8C0CFBB0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "B9209E33"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "B9209E33"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "DCE9571F"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "FE575A87"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "8C0CFBB0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "94792E8D"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "7807AEBA"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "2D7FD92"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "5BD4970"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "153B0D1E"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 442,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 442,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 442,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 842,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 842,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1469,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1317,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 516,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 516,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1642,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1642,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 603,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 603,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 603,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 603,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 747,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 747,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 747,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 672,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 672,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 510,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA"
										},
										{
											"begin": 442,
											"end": 510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 842,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1582,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 1626,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1603,
											"end": 1629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1415,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C060D8ADD9E7B6A84ECB7F29B08E239FAD2C56C4F609DEC6C17AB68D8655FE7D"
										},
										{
											"begin": 1453,
											"end": 1455,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1436,
											"end": 1456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1456,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "120F974A3B1C46838E58DF88A957752089D3BFF8B65F144F94C1B4B52C456B72"
										},
										{
											"begin": 516,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 516,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "811427A0FA4932AEF534BBA16BC34E9B7B2D7D2A79C475FCA1765F6CC1FAEBEA"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F0"
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1764,
											"end": 1792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1825,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1821,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A09BE255173B26F6E7520D96EF6279415258E6EEA9B9295A29A448C4F81DAB74"
										},
										{
											"begin": 1871,
											"end": 1876,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 1885,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1847,
											"end": 1886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1886,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 603,
											"end": 645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 603,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 795,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "PUSH",
											"source": 0,
											"value": "F0"
										},
										{
											"begin": 747,
											"end": 795,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 747,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 672,
											"end": 717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2073,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2151,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2278,
											"end": 2283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2260,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2285,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2415,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2574,
											"end": 2653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2764,
											"end": 2771,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2719,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2881,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2795,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2999,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2887,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2970,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2970,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2993,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3145,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3212,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3145,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3341,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3225,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3295,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3295,
											"end": 3316,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3295,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3275,
											"end": 3335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3275,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3390,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3435,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3444,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3474,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3444,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3583,
											"end": 3606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3576,
											"end": 3695,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3614,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3614,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3693,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3614,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3695,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3576,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3759,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3812,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3759,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3887,
											"end": 3937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3937,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3887,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4082,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3960,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4033,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4057,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4033,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4058,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4013,
											"end": 4076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4076,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4013,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4215,
											"end": 4220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4188,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4221,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4188,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4327,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4339,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4344,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4309,
											"end": 4428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4347,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4347,
											"end": 4426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4426,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4347,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4428,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4309,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4537,
											"end": 4544,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4526,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4535,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4492,
											"end": 4545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4545,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4492,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4636,
											"end": 4642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4696,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4780,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4661,
											"end": 4780,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4699,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4699,
											"end": 4778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4778,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4699,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4780,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4661,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4844,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4972,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4962,
											"end": 5025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4962,
											"end": 5025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5190,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5191,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5323,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5203,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5292,
											"end": 5297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5275,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5298,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5275,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5299,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5255,
											"end": 5317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5317,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5255,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5454,
											"end": 5459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5428,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5559,
											"end": 5564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5543,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5566,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5523,
											"end": 5584,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5584,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5523,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5719,
											"end": 5724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5694,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5725,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5694,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5862,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5874,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5879,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5882,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5882,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5844,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6072,
											"end": 6079,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6027,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6027,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 6090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6131,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6188,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6155,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6155,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6100,
											"end": 6217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6325,
											"end": 6332,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6314,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6282,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6333,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6282,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6356,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6458,
											"end": 6463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6441,
											"end": 6464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6441,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6595,
											"end": 6604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6591,
											"end": 6609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6667,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6619,
											"end": 6688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6688,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6619,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6843,
											"end": 6852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6857,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6867,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6867,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6867,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6867,
											"end": 6936,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6867,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7010,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6946,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7014,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6946,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 7021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7145,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7027,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7114,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7312,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7287,
											"end": 7313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7376,
											"end": 7393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7323,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 7323,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7472,
											"end": 7474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7454,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7404,
											"end": 7476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7476,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7404,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/IdentityRegistry.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"KYC_ADMIN_ROLE()": "02d7fd92",
							"SANCTIONS_ADMIN_ROLE()": "8c0cfbb0",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"investorTypeOf(address)": "05bd4970",
							"isBlacklisted(address)": "fe575a87",
							"isVerified(address)": "b9209e33",
							"jurisdictionOf(address)": "dce9571f",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setAttributes(address,bytes2,uint8)": "94792e8d",
							"setBlacklist(address,bool)": "153b0d1e",
							"setKyc(address,bool)": "7807aeba",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes2\",\"name\":\"juris\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"invType\",\"type\":\"uint8\"}],\"name\":\"AttributesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"name\":\"BlacklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"name\":\"KycUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KYC_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SANCTIONS_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorTypeOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"jurisdictionOf\",\"outputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"juris\",\"type\":\"bytes2\"},{\"internalType\":\"uint8\",\"name\":\"invType\",\"type\":\"uint8\"}],\"name\":\"setAttributes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"name\":\"setKyc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal Identity Registry (demo). Stores flags/attributes only (no PII). Roles:  - DEFAULT_ADMIN_ROLE  - KYC_ADMIN_ROLE: can set KYC + attributes  - SANCTIONS_ADMIN_ROLE: can set blacklist\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IdentityRegistry.sol\":\"IdentityRegistry\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IdentityRegistry.sol\":{\"keccak256\":\"0x2bd67535bcf82af0e2a69255953d23a618ea2e0904b633312bc881ebaa153ffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd3aaafa916c4a4cd5da3f48e3ac335de211e5bd79b84e3ceb0c08b505425647\",\"dweb:/ipfs/QmejqLioeoQPqccydWufTYTiHjgkKiJ1YQoRRoSQbaRmfX\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)170_storage)"
							},
							{
								"astId": 19,
								"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
								"label": "isVerified",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 23,
								"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 27,
								"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
								"label": "jurisdictionOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bytes2)"
							},
							{
								"astId": 31,
								"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
								"label": "investorTypeOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint8)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes2": {
								"encoding": "inplace",
								"label": "bytes2",
								"numberOfBytes": "2"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_bytes2)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes2)",
								"numberOfBytes": "32",
								"value": "t_bytes2"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)170_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)170_storage"
							},
							"t_struct(RoleData)170_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 167,
										"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 169,
										"contract": "contracts/IdentityRegistry.sol:IdentityRegistry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal Identity Registry (demo). Stores flags/attributes only (no PII). Roles:  - DEFAULT_ADMIN_ROLE  - KYC_ADMIN_ROLE: can set KYC + attributes  - SANCTIONS_ADMIN_ROLE: can set blacklist",
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)170_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)170_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)170_storage"
							},
							"t_struct(RoleData)170_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 167,
										"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 169,
										"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IdentityRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/IdentityRegistry.sol",
					"exportedSymbols": {
						"AccessControl": [
							444
						],
						"Context": [
							557
						],
						"ERC165": [
							581
						],
						"IAccessControl": [
							527
						],
						"IdentityRegistry": [
							148
						]
					},
					"id": 149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 149,
							"sourceUnit": 445,
							"src": "58:121:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "AccessControl",
										"nameLocations": [
											"422:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "422:13:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "422:13:0"
								}
							],
							"canonicalName": "IdentityRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "181:211:0",
								"text": " Minimal Identity Registry (demo). Stores flags/attributes only (no PII).\n Roles:\n  - DEFAULT_ADMIN_ROLE\n  - KYC_ADMIN_ROLE: can set KYC + attributes\n  - SANCTIONS_ADMIN_ROLE: can set blacklist"
							},
							"fullyImplemented": true,
							"id": 148,
							"linearizedBaseContracts": [
								148,
								444,
								581,
								593,
								527,
								557
							],
							"name": "IdentityRegistry",
							"nameLocation": "402:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "02d7fd92",
									"id": 10,
									"mutability": "constant",
									"name": "KYC_ADMIN_ROLE",
									"nameLocation": "466:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "442:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 6,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4b59435f41444d494e5f524f4c45",
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "493:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea",
													"typeString": "literal_string \"KYC_ADMIN_ROLE\""
												},
												"value": "KYC_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_811427a0fa4932aef534bba16bc34e9b7b2d7d2a79c475fca1765f6cc1faebea",
													"typeString": "literal_string \"KYC_ADMIN_ROLE\""
												}
											],
											"id": 7,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "483:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "483:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8c0cfbb0",
									"id": 15,
									"mutability": "constant",
									"name": "SANCTIONS_ADMIN_ROLE",
									"nameLocation": "540:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "516:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53414e4354494f4e535f41444d494e5f524f4c45",
												"id": 13,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "573:22:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72",
													"typeString": "literal_string \"SANCTIONS_ADMIN_ROLE\""
												},
												"value": "SANCTIONS_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_120f974a3b1c46838e58df88a957752089d3bff8b65f144f94c1b4b52c456b72",
													"typeString": "literal_string \"SANCTIONS_ADMIN_ROLE\""
												}
											],
											"id": 12,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "563:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "563:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9209e33",
									"id": 19,
									"mutability": "mutable",
									"name": "isVerified",
									"nameLocation": "635:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "603:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 18,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "611:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "603:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 17,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "622:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 23,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "704:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "672:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 22,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "672:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 21,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "691:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dce9571f",
									"id": 27,
									"mutability": "mutable",
									"name": "jurisdictionOf",
									"nameLocation": "781:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "747:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes2_$",
										"typeString": "mapping(address => bytes2)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "747:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes2_$",
											"typeString": "mapping(address => bytes2)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"name": "bytes2",
											"nodeType": "ElementaryTypeName",
											"src": "766:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes2",
												"typeString": "bytes2"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05bd4970",
									"id": 31,
									"mutability": "mutable",
									"name": "investorTypeOf",
									"nameLocation": "876:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 148,
									"src": "842:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "842:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "861:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c060d8add9e7b6a84ecb7f29b08e239fad2c56c4f609dec6c17ab68d8655fe7d",
									"id": 37,
									"name": "KycUpdated",
									"nameLocation": "951:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "978:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "962:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "ok",
												"nameLocation": "989:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "984:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 34,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:31:0"
									},
									"src": "945:48:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac",
									"id": 43,
									"name": "BlacklistUpdated",
									"nameLocation": "1004:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1021:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "ok",
												"nameLocation": "1048:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:31:0"
									},
									"src": "998:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a09be255173b26f6e7520d96ef6279415258e6eea9b9295a29a448c4f81dab74",
									"id": 51,
									"name": "AttributesUpdated",
									"nameLocation": "1063:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1097:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1081:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "juris",
												"nameLocation": "1110:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 46,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "1103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "invType",
												"nameLocation": "1123:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 48,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1117:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:51:0"
									},
									"src": "1057:75:0"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1165:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 57,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1186:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 58,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1175:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1175:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "KYC_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1233:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 63,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1249:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 61,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1222:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1222:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "SANCTIONS_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1276:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 68,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 66,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1265:39:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:15:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:0"
									},
									"scope": 148,
									"src": "1138:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1390:73:0",
										"statements": [
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 82,
															"name": "isVerified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1400:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 84,
														"indexExpression": {
															"id": 83,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1400:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 85,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1419:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1400:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1400:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 89,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1453:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "KycUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "EmitStatement",
												"src": "1431:25:0"
											}
										]
									},
									"functionSelector": "7807aeba",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 79,
													"name": "KYC_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 80,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 78,
												"name": "onlyRole",
												"nameLocations": [
													"1365:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "1365:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1365:24:0"
										}
									],
									"name": "setKyc",
									"nameLocation": "1326:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1341:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1333:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "ok",
												"nameLocation": "1352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:23:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:0"
									},
									"scope": 148,
									"src": "1317:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1554:82:0",
										"statements": [
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1564:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1564:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1586:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1564:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1564:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 111,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1620:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 112,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "BlacklistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1603:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1603:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "EmitStatement",
												"src": "1598:31:0"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 101,
													"name": "SANCTIONS_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "1532:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 100,
												"name": "onlyRole",
												"nameLocations": [
													"1523:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "1523:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1523:30:0"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1478:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1491:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "ok",
												"nameLocation": "1510:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:23:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1554:0:0"
									},
									"scope": 148,
									"src": "1469:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1754:139:0",
										"statements": [
											{
												"expression": {
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 128,
															"name": "jurisdictionOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1764:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes2_$",
																"typeString": "mapping(address => bytes2)"
															}
														},
														"id": 130,
														"indexExpression": {
															"id": 129,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1764:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes2",
															"typeString": "bytes2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 131,
														"name": "juris",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1787:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes2",
															"typeString": "bytes2"
														}
													},
													"src": "1764:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1764:28:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 134,
															"name": "investorTypeOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1802:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1802:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "invType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1802:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1802:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1865:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "juris",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "1871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														},
														{
															"id": 143,
															"name": "invType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 140,
														"name": "AttributesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1847:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes2_$_t_uint8_$returns$__$",
															"typeString": "function (address,bytes2,uint8)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "EmitStatement",
												"src": "1842:44:0"
											}
										]
									},
									"functionSelector": "94792e8d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 125,
													"name": "KYC_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1734:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 124,
												"name": "onlyRole",
												"nameLocations": [
													"1725:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "1725:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1725:24:0"
										}
									],
									"name": "setAttributes",
									"nameLocation": "1651:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1673:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1665:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "juris",
												"nameLocation": "1686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 119,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "1679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "invType",
												"nameLocation": "1699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 121,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:43:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:0"
									},
									"scope": 148,
									"src": "1642:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 149,
							"src": "393:1502:0",
							"usedErrors": [
								454,
								457
							],
							"usedEvents": [
								37,
								43,
								51,
								466,
								475,
								484
							]
						}
					],
					"src": "32:1863:0"
				},
				"id": 0
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							444
						],
						"Context": [
							557
						],
						"ERC165": [
							581
						],
						"IAccessControl": [
							527
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 528,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 151,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 527,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 558,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 153,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 557,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 582,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 155,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 581,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 557,
										"src": "1988:7:1"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 160,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 527,
										"src": "1997:14:1"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 162,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 581,
										"src": "2013:6:1"
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 444,
							"linearizedBaseContracts": [
								444,
								581,
								593,
								527,
								557
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 170,
									"members": [
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 170,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 166,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 170,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 168,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 444,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 174,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 171,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 172,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 170,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 170,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$170_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 178,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 176,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															242,
															263
														],
														"referencedDeclaration": 242,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 187,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 189,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										580
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 200,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$527_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$527_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 199,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$527",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 206,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 204,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$444_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 580,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 197,
												"id": 209,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 191,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 444,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										494
									],
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 221,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 223,
															"indexExpression": {
																"id": 222,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$170_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 226,
													"indexExpression": {
														"id": 225,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 220,
												"id": 227,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 444,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 237,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 235,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															242,
															263
														],
														"referencedDeclaration": 263,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 444,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 251,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 252,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 250,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 260,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 256,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 257,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 255,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 259,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 444,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 271,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$170_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 169,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 270,
												"id": 275,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 444,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										510
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 292,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 290,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 286,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 285,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 284,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 444,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										518
									],
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 311,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 309,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 305,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 304,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 444,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										526
									],
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 324,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 327,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 329,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 334,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 332,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 444,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 346,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [
														{
															"id": 349,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 348,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 352,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 354,
															"indexExpression": {
																"id": 353,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$170_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 169,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 356,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 360,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 361,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 362,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 359,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 444,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 377,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 378,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 376,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 375,
															"id": 401,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 399,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 381,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 175,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 383,
																			"indexExpression": {
																				"id": 382,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$170_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 386,
																	"indexExpression": {
																		"id": 385,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 391,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 392,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 393,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 396,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 375,
															"id": 398,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 444,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 416,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 415,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 414,
															"id": 439,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 175,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 408,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$170_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 424,
																	"indexExpression": {
																		"id": 423,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 429,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 430,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 431,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 428,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 434,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 414,
															"id": 436,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 444,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 445,
							"src": "1953:5096:1",
							"usedErrors": [
								454,
								457
							],
							"usedEvents": [
								466,
								475,
								484
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							527
						]
					},
					"id": 528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 447,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 527,
							"linearizedBaseContracts": [
								527
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 454,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "373:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:2"
									},
									"src": "317:76:2"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 457,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:2"
									},
									"src": "552:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 466,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "877:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "899:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "934:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 463,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:2"
									},
									"src": "854:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 475,
									"name": "RoleGranted",
									"nameLocation": "1193:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1205:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1227:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1252:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:2"
									},
									"src": "1187:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 484,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1580:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1602:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1627:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:2"
									},
									"src": "1562:89:2"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1755:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1769:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1809:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:2"
									},
									"scope": 527,
									"src": "1738:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:2"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:2"
									},
									"scope": 527,
									"src": "2010:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2347:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "2361:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:2"
									},
									"scope": 527,
									"src": "2328:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2641:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 512,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2655:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:2"
									},
									"scope": 527,
									"src": "2621:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3205:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 520,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3219:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:2"
									},
									"scope": 527,
									"src": "3183:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 528,
							"src": "225:3033:2",
							"usedErrors": [
								454,
								457
							],
							"usedEvents": [
								466,
								475,
								484
							]
						}
					],
					"src": "109:3150:2"
				},
				"id": 2
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							557
						]
					},
					"id": 558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 530,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 557,
							"linearizedBaseContracts": [
								557
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 535,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 534,
												"id": 537,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 557,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 544,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 543,
												"id": 546,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 557,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 552,
												"id": 554,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 557,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 558,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							581
						],
						"IERC165": [
							593
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 594,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 560,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 593,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 563,
										"name": "IERC165",
										"nameLocations": [
											"687:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 593,
										"src": "687:7:4"
									},
									"id": 564,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 562,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581,
								593
							],
							"name": "ERC165",
							"nameLocation": "677:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										592
									],
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "844:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "861:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 574,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$593_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$593_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 573,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$593",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 578,
												"nodeType": "Return",
												"src": "854:47:4"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "789:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 566,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:4"
									},
									"scope": 581,
									"src": "762:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 582,
							"src": "659:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:4"
				},
				"id": 4
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.0.2/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							593
						]
					},
					"id": 594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 584,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 593,
							"linearizedBaseContracts": [
								593
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 586,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 593,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 594,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			}
		}
	}
}